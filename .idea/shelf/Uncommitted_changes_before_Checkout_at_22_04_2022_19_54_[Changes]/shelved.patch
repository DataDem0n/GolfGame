Index: core/src/physics/sytem/Wall.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package physics.sytem;\r\n\r\npublic class Wall implements Obstacles{\r\n\r\n    private double coordX;\r\n    private double coordY;\r\n\r\n    public Wall(double coordX, double coordY){\r\n        this.coordX = coordX;\r\n        this.coordY = coordY;\r\n    }\r\n\r\n    @Override\r\n    public double[] collide(double[] coordsAndVelocity) {\r\n        if(coordsAndVelocity[0] >= coordX || coordsAndVelocity[0] <= -coordX){\r\n            coordsAndVelocity[2] = - coordsAndVelocity[2];\r\n        }\r\n        if(coordsAndVelocity[1] >= coordY || coordsAndVelocity[1] <= -coordY){\r\n            coordsAndVelocity[3] = - coordsAndVelocity[3];\r\n        }\r\n        return coordsAndVelocity;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/src/physics/sytem/Wall.java b/core/src/physics/sytem/Wall.java
--- a/core/src/physics/sytem/Wall.java	(revision 5e2d10af338e78072bc78487bcfd9e133a4f4a83)
+++ b/core/src/physics/sytem/Wall.java	(date 1650366251000)
@@ -11,7 +11,7 @@
     }
 
     @Override
-    public double[] collide(double[] coordsAndVelocity) {
+    public double[] collide(double[] coordsAndVelocity, double[] tempCoordinates) {
         if(coordsAndVelocity[0] >= coordX || coordsAndVelocity[0] <= -coordX){
             coordsAndVelocity[2] = - coordsAndVelocity[2];
         }
Index: core/src/physics/sytem/EulerSolver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package physics.sytem;\r\n\r\nimport com.mygdx.game.main.DataField;\r\n\r\nimport javax.xml.crypto.Data;\r\nimport java.util.Arrays;\r\nimport java.util.Timer;\r\nimport java.util.function.BiFunction;\r\n\r\npublic class EulerSolver extends Physics {\r\n\r\n    private double counter = 0;\r\n    private int fps = 120;\r\n    private BiFunction<Double, Double, Double> terrain;\r\n    private double kFriction;\r\n    private double sFriction;\r\n    double[] targetRXY;\r\n    public double[] tempCoordinates = new double [2];\r\n    private double[] coordinatesAndVelocity;\r\n    private Wall wall = new Wall(25,25);\r\n    private SandPits sandPits = new SandPits(DataField.sandPit, 0.7, 0.8);\r\n\r\n    // Overview of what is stored in the coordinatedAndVelocity array:\r\n    // [0] - coordinateX\r\n    // [1] - coordinateY\r\n    // [2] - velocityX\r\n    // [3] - velocityY\r\n\r\n    /**\r\n     * Constructor for the EulerSolver class initializing instance variables\r\n     * @param terrain the function of two variables describing the terrain surface\r\n     * @param coordinatesAndVelocity an array with coordinates X and Y on first two positions and velocities X and Y in 3,4 positions\r\n     * @param kFriction the kinetic friction acting upon a ball\r\n     * @param sFriction the static friction acting upon a ball\r\n     * @param targetRXY an array that represents the target's radius on first position, target's X-coordinate on second and target's Y-coordinate\r\n     */\r\n    public EulerSolver(BiFunction<Double, Double, Double> terrain, double[] coordinatesAndVelocity, double kFriction, double sFriction, double[] targetRXY){\r\n        this.terrain = terrain;\r\n        this.coordinatesAndVelocity = coordinatesAndVelocity;\r\n        DataField.kFriction = kFriction;\r\n        DataField.sFriction = sFriction;\r\n        this.targetRXY = targetRXY;\r\n    }\r\n\r\n    /**\r\n     * Method based on the Euler Method for solving differential equations that calculates the next velocities in the X-direction and Y-direction, after a certain step size\r\n     * and calculates the next coordinates of the ball based on the resulting velocities, so that it tracks ball's movements\r\n     * @param step a step size in the Euler's method\r\n     * @return an array with final coordinates and velocities of a ball that has stopped after a shot\r\n     */\r\n    public double[] coordinatesAndVelocityUntilStop(double step)  {\r\n\r\n        tempCoordinates[0] = coordinatesAndVelocity[0];\r\n        tempCoordinates[1] = coordinatesAndVelocity[1];\r\n        coordinatesAndVelocity = maxSpeedReached(coordinatesAndVelocity);\r\n\r\n        while(!hasBallStopped(coordinatesAndVelocity, sFriction, terrain, step)){\r\n\r\n            if(coordinatesAndVelocity[2] == 0 && coordinatesAndVelocity[3] == 0){\r\n                coordinatesAndVelocity[2] = coordinatesAndVelocity[2] + (step * accelerationX2(coordinatesAndVelocity, terrain, DataField.kFriction)); //X-Velocity = xVelocity + step*acc\r\n                coordinatesAndVelocity[3] = coordinatesAndVelocity[3] + (step * accelerationY2(coordinatesAndVelocity, terrain, DataField.kFriction)); //Y-Velocity = YVelocity + step*acc\r\n            }\r\n            else{\r\n                coordinatesAndVelocity[2] = coordinatesAndVelocity[2] + (step * accelerationX(coordinatesAndVelocity, terrain, DataField.kFriction)); //X-Velocity = xVelocity + step*acc\r\n                coordinatesAndVelocity[3] = coordinatesAndVelocity[3] + (step * accelerationY(coordinatesAndVelocity, terrain, DataField.kFriction)); //Y-Velocity = YVelocity + step*acc\r\n            }\r\n\r\n            //here updating the coordinates based on calculated velocities (step = timeInterval ALWAYS)\r\n            coordinatesAndVelocity[0] = coordinatesAndVelocity[0] + coordinatesAndVelocity[2]*step;\r\n            coordinatesAndVelocity[1] = coordinatesAndVelocity[1] + coordinatesAndVelocity[3]*step;\r\n\r\n            counter+= step;\r\n\r\n//            if(counter>=1/fps) {\r\n//                try {\r\n//                    Thread.sleep(0,2);\r\n//                } catch (InterruptedException e) {\r\n//                    e.printStackTrace();\r\n//                }\r\n//                counter = 0.0;\r\n//            }\r\n\r\n            DataField.x = (float)coordinatesAndVelocity[0];\r\n            DataField.y = (float)coordinatesAndVelocity[1];\r\n\r\n            //checking if the ball has fallen into water\r\n            if(terrain.apply(coordinatesAndVelocity[0], coordinatesAndVelocity[1]) < 0){\r\n                System.out.println(\"YOU'RE IN THE WATER!!\");\r\n                coordinatesAndVelocity[0] = tempCoordinates[0];\r\n                coordinatesAndVelocity[1] = tempCoordinates[1];\r\n//                System.out.println(\"x: \"+coordinatesAndVelocity[0] +\" y: \"+ coordinatesAndVelocity[1]);\r\n\r\n                return coordinatesAndVelocity;\r\n            }\r\n            wall.collide(coordinatesAndVelocity);\r\n            sandPits.change(coordinatesAndVelocity);\r\n\r\n       }\r\n//        System.out.println(\"x: \"+coordinatesAndVelocity[0] +\" y: \"+ coordinatesAndVelocity[1]);\r\n\r\n        return coordinatesAndVelocity;\r\n    }\r\n\r\n    //SETTERS\r\n\r\n    //0.05-0.1\r\n    //Static friction (grass) ÂµS 0.1-0.2\r\n    /**\r\n     * A setter for kinetic friction\r\n     * @param kFriction kinetic friction\r\n     */\r\n    public void setkFriction(double kFriction){\r\n        if(kFriction > 0.1){\r\n            System.out.println(\"THE KINETIC FRICTION TOO HIGH, I SET IT TO 0.1\");\r\n            DataField.kFriction = 0.1;\r\n        }\r\n        else if(kFriction < 0.05){\r\n            System.out.println(\"THE KINETIC FRICTION TOO LOW, I SET IT TO 0.05\");\r\n            DataField.kFriction = 0.05;\r\n        }\r\n        else{\r\n            DataField.kFriction = kFriction;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * A setter for static friction\r\n     * @param sFriction static friction\r\n     */\r\n    public void setsFriction(double sFriction){\r\n        if(sFriction > 0.2){\r\n            System.out.println(\"THE STATIC FRICTION TOO HIGH, I SET IT TO 0.2\");\r\n            DataField.sFriction = 0.2;\r\n        }\r\n        else if(sFriction < 0.1){\r\n            System.out.println(\"THE STATIC FRICTION TOO LOW, I SET IT TO 0.1\");\r\n            DataField.sFriction = 0.1;\r\n        }\r\n        else{\r\n            DataField.sFriction = sFriction;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A setter for x and y coordinates\r\n     * @param X x-coordinate\r\n     * @param Y y-coordinate\r\n     */\r\n    public void setCoordinates(double X, double Y) {\r\n        this.coordinatesAndVelocity [0] = X;\r\n        this.coordinatesAndVelocity [1] = Y;\r\n    }\r\n\r\n    /**\r\n     * A setter for X and Y velocities\r\n     * @param X velocity in the X-direction\r\n     * @param Y velocity in the Y-direction\r\n     */\r\n    public void setVelocity(double X, double Y) {\r\n        this.coordinatesAndVelocity [2] = X;\r\n        this.coordinatesAndVelocity [3] = Y;\r\n    }\r\n\r\n    /**\r\n     * A setter for taget's position and radius\r\n     * @param targetRXY and array containing target's radius and x,y coordinates\r\n     */\r\n    public void setTargetRXY(double[] targetRXY) {\r\n        this.targetRXY = targetRXY;\r\n    }\r\n\r\n    /**\r\n     * A setter for terrain\r\n     * @param terrain the function of two variables describing the terrain surface\r\n     */\r\n    public void setTerrain(BiFunction<Double,Double,Double> terrain){\r\n        this.terrain = terrain;\r\n    }\r\n\r\n    //GETTERS\r\n    /**\r\n     * A getter for x-Coordinate of the ball's position\r\n     * @return x-Coordinate of the ball's position\r\n     */\r\n    public double getXCoord(){ return this.coordinatesAndVelocity[0]; };\r\n\r\n    /**\r\n     * A getter for y-Coordinate of the ball's position\r\n     * @return y-Coordinate of the ball's position\r\n     */\r\n    public double getYCoord() { return this.coordinatesAndVelocity[1]; }\r\n\r\n    /**\r\n     * A getter for the X-velocity of the ball\r\n     * @return the X-velocity of the ball\r\n     */\r\n    public double getXVel() {\r\n        return this.coordinatesAndVelocity[2];\r\n    }\r\n\r\n    /**\r\n     * A getter for the Y-velocity of the ball\r\n     * @return the Y-velocity of the ball\r\n     */\r\n    public double getYVel() {\r\n        return this.coordinatesAndVelocity[3];\r\n    }\r\n\r\n    /**\r\n     * A getter for target's radius\r\n     * @return the target's radius\r\n     */\r\n    public double getTRadius() {\r\n        return this.targetRXY[0];\r\n    }\r\n\r\n    /**\r\n     * A getter for target's x-coordinate\r\n     * @return the target's x-coordinate\r\n     */\r\n    public double getXTarget() {\r\n        return this.targetRXY[1];\r\n    }\r\n\r\n    /**\r\n     * A getter for target's y-coordinate\r\n     * @return the target's y-coordinate\r\n     */\r\n    public double getYTarget() {\r\n        return targetRXY[2];\r\n    }\r\n\r\n//    public static void main(String[] args) { testing\r\n//        double[] coordinatesAndVelocity = {0,0,2,0};\r\n//        double[] target = {1,4,4};\r\n//        double kfriction = 0.05;\r\n//        double staticFriction = 0.2;\r\n//        BiFunction<Double,Double,Double> terrain = (x,y)->(double)(0.1*x+1);\r\n//        //BiFunction<Double,Double,Double> terrain = (x,y)->(double)(Math.pow(Math.E, -((x*x+y*y)/40)));\r\n//       //BiFunction<Double,Double,Double> terrain = (x,y)->(double)(0.5*(Math.sin((x-y)/7)+0.9));\r\n//       //BiFunction<Double,Double,Double> terrain = (x,y)->(double)(0.5*(Math.sin((x-y)/7)+0.9));\r\n//        double step = 0.0000000001;\r\n//        EulerSolver e = new EulerSolver(terrain, coordinatesAndVelocity, kfriction, staticFriction, target);\r\n////        for (int i = 0; i < 100; i++) {\r\n//            System.out.println(step +\", \" + e.coordinatesAndVelocityUntilStop(step)[0] + \", \"+ e.coordinatesAndVelocityUntilStop(step)[1]+\", \");\r\n//            //step = step + 0.001;\r\n//       //}\r\n//\r\n//    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/src/physics/sytem/EulerSolver.java b/core/src/physics/sytem/EulerSolver.java
--- a/core/src/physics/sytem/EulerSolver.java	(revision 5e2d10af338e78072bc78487bcfd9e133a4f4a83)
+++ b/core/src/physics/sytem/EulerSolver.java	(date 1650368907324)
@@ -10,7 +10,7 @@
 public class EulerSolver extends Physics {
 
     private double counter = 0;
-    private int fps = 120;
+    private int fps = 30;
     private BiFunction<Double, Double, Double> terrain;
     private double kFriction;
     private double sFriction;
@@ -18,7 +18,9 @@
     public double[] tempCoordinates = new double [2];
     private double[] coordinatesAndVelocity;
     private Wall wall = new Wall(25,25);
-    private SandPits sandPits = new SandPits(DataField.sandPit, 0.7, 0.8);
+    private SandPits sandPits = new SandPits(DataField.sandPit, 0.75, 1);
+    private Water water = new Water();
+    private Tree tree = new Tree(10,10);
 
     // Overview of what is stored in the coordinatedAndVelocity array:
     // [0] - coordinateX
@@ -71,32 +73,36 @@
 
             counter+= step;
 
-//            if(counter>=1/fps) {
-//                try {
-//                    Thread.sleep(0,2);
-//                } catch (InterruptedException e) {
-//                    e.printStackTrace();
-//                }
-//                counter = 0.0;
-//            }
+            if(counter>=1/fps) {
+                try {
+                    Thread.sleep(33);
+                } catch (InterruptedException e) {
+                    e.printStackTrace();
+                }
+                counter = 0.0;
+            }
 
             DataField.x = (float)coordinatesAndVelocity[0];
             DataField.y = (float)coordinatesAndVelocity[1];
 
             //checking if the ball has fallen into water
-            if(terrain.apply(coordinatesAndVelocity[0], coordinatesAndVelocity[1]) < 0){
-                System.out.println("YOU'RE IN THE WATER!!");
-                coordinatesAndVelocity[0] = tempCoordinates[0];
-                coordinatesAndVelocity[1] = tempCoordinates[1];
+//            if(terrain.apply(coordinatesAndVelocity[0], coordinatesAndVelocity[1]) < 0){
+//                System.out.println("YOU'RE IN THE WATER!!");
+//                coordinatesAndVelocity[0] = tempCoordinates[0];
+//                coordinatesAndVelocity[1] = tempCoordinates[1];
 //                System.out.println("x: "+coordinatesAndVelocity[0] +" y: "+ coordinatesAndVelocity[1]);
-
-                return coordinatesAndVelocity;
-            }
-            wall.collide(coordinatesAndVelocity);
+//
+//                return coordinatesAndVelocity;
+//            }
+            wall.collide(coordinatesAndVelocity, tempCoordinates);
             sandPits.change(coordinatesAndVelocity);
+            water.collide(coordinatesAndVelocity, tempCoordinates);
+            tree.collide(coordinatesAndVelocity, tempCoordinates);
 
+
+            System.out.println("x: "+coordinatesAndVelocity[0] +" y: "+ coordinatesAndVelocity[1]);
        }
-//        System.out.println("x: "+coordinatesAndVelocity[0] +" y: "+ coordinatesAndVelocity[1]);
+        System.out.println("x: "+coordinatesAndVelocity[0] +" y: "+ coordinatesAndVelocity[1]);
 
         return coordinatesAndVelocity;
     }
Index: core/src/physics/sytem/GameEngine.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package physics.sytem;\r\n\r\nimport com.mygdx.game.main.DataField;\r\nimport javax.xml.crypto.Data;\r\nimport java.util.Scanner;\r\nimport java.util.function.BiFunction;\r\n\r\npublic class GameEngine extends EulerSolver{\r\n\r\n    Scanner s = new Scanner(System.in);\r\n    /**\r\n     * A constructor for the GameEngine class that initializes all instance fields, also in the superclass\r\n     * @param terrain the function of two variables describing the terrain surface\r\n     * @param coordinatesAndVelocity an array with coordinates X and Y on first two positions and velocities X and Y in 3,4 positions\r\n     * @param kFriction the kinetic friction acting upon a ball\r\n     * @param sFriction the static friction acting upon a ball\r\n     * @param targetRXY an array that represents the target's radius on first position, target's X-coordinate on second and target's Y-coordinate\r\n     */\r\n    public GameEngine(BiFunction<Double, Double, Double> terrain, double[] coordinatesAndVelocity, double kFriction, double sFriction, double[] targetRXY){\r\n        super(terrain, coordinatesAndVelocity, kFriction, sFriction, targetRXY);\r\n    }\r\n\r\n    /**\r\n     * A method that manages the game\r\n     */\r\n    public void game() throws InterruptedException {\r\n\r\n        while(DataField.GUI){\r\n            Thread.sleep(50);\r\n        }\r\n\r\n        setCoordinates(DataField.x, DataField.y);\r\n        setVelocity(DataField.velocityX.get(0), DataField.velocityY.get(0));\r\n        setkFriction(DataField.kFriction);\r\n        setsFriction(DataField.sFriction);\r\n        setTargetRXY(DataField.targetRXY);\r\n\r\n        setTerrain(DataField.terrain);\r\n        int index = 1;\r\n\r\n        // while ball is not in the target\r\n        while (!(Math.pow(DataField.targetRXY[0] ,2)>(Math.pow((getXCoord()-DataField.targetRXY[1]), 2 )+Math.pow((getYCoord()-DataField.targetRXY[2]), 2 )))){\r\n\r\n            coordinatesAndVelocityUntilStop( 0.00000001);\r\n\r\n            DataField.x = (float) getXCoord();\r\n            DataField.y = (float) getYCoord();\r\n\r\n                if((Math.pow(DataField.targetRXY[0] ,2)>(Math.pow((getXCoord()-DataField.targetRXY[1]), 2 )+Math.pow((getYCoord()-DataField.targetRXY[2]), 2 ))))\r\n                {\r\n                    System.out.println(\"YOU WON!\");\r\n                }\r\n                else\r\n                {\r\n\r\n                    while(DataField.GUI){\r\n                        Thread.sleep(50);\r\n                    }\r\n\r\n                    if(DataField.usingGui) {\r\n                        DataField.velocityX.remove(0);\r\n                        DataField.velocityY.remove(0);\r\n                        DataField.GUI = true;\r\n                        game();\r\n                    }\r\n                    if(index!=DataField.velocityX.size()){\r\n                        setVelocity(DataField.velocityX.get(index), DataField.velocityY.get(index));\r\n                        index++;\r\n                    }\r\n                    else{\r\n                        System.out.println(\"You did not win, better luck next time.\\nPlease restart with a new file input.\");\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    @Override\r\n    public void run() {\r\n        try {\r\n            game();\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/src/physics/sytem/GameEngine.java b/core/src/physics/sytem/GameEngine.java
--- a/core/src/physics/sytem/GameEngine.java	(revision 5e2d10af338e78072bc78487bcfd9e133a4f4a83)
+++ b/core/src/physics/sytem/GameEngine.java	(date 1650364772000)
@@ -23,6 +23,7 @@
     /**
      * A method that manages the game
      */
+
     public void game() throws InterruptedException {
 
         while(DataField.GUI){
@@ -41,7 +42,7 @@
         // while ball is not in the target
         while (!(Math.pow(DataField.targetRXY[0] ,2)>(Math.pow((getXCoord()-DataField.targetRXY[1]), 2 )+Math.pow((getYCoord()-DataField.targetRXY[2]), 2 )))){
 
-            coordinatesAndVelocityUntilStop( 0.00000001);
+            coordinatesAndVelocityUntilStop( 0.01);
 
             DataField.x = (float) getXCoord();
             DataField.y = (float) getYCoord();
@@ -54,7 +55,7 @@
                 {
 
                     while(DataField.GUI){
-                        Thread.sleep(50);
+                        Thread.sleep(1);
                     }
 
                     if(DataField.usingGui) {
@@ -83,5 +84,8 @@
             e.printStackTrace();
         }
     }
+
+
+
 }
 
Index: core/src/physics/sytem/Water.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package physics.sytem;\r\n\r\nimport com.mygdx.game.main.DataField;\r\n\r\npublic class Water implements DifferentTerrain{\r\n\r\n    public  Water(){\r\n\r\n    }\r\n    @Override\r\n    public void change(double[] coordinatesAndVelocity) {\r\n\r\n        if(DataField.terrain.apply(coordinatesAndVelocity[0], coordinatesAndVelocity[1]) < 0){\r\n            System.out.println(\"YOU'RE IN THE WATER!!\");\r\n            //coordinatesAndVelocity[0] = Physics.tempCoordinates[0];\r\n            //coordinatesAndVelocity[1] = Physics.tempCoordinates[1];\r\n            System.out.println(\"x: \"+coordinatesAndVelocity[0] +\" y: \"+ coordinatesAndVelocity[1]);\r\n\r\n            //return coordinatesAndVelocity;\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/src/physics/sytem/Water.java b/core/src/physics/sytem/Water.java
--- a/core/src/physics/sytem/Water.java	(revision 5e2d10af338e78072bc78487bcfd9e133a4f4a83)
+++ b/core/src/physics/sytem/Water.java	(date 1650368881490)
@@ -2,22 +2,20 @@
 
 import com.mygdx.game.main.DataField;
 
-public class Water implements DifferentTerrain{
+public class Water implements Obstacles{
 
     public  Water(){
 
     }
+
     @Override
-    public void change(double[] coordinatesAndVelocity) {
-
+    public double[] collide(double[] coordinatesAndVelocity, double[] tempCoordinates) {
         if(DataField.terrain.apply(coordinatesAndVelocity[0], coordinatesAndVelocity[1]) < 0){
             System.out.println("YOU'RE IN THE WATER!!");
-            //coordinatesAndVelocity[0] = Physics.tempCoordinates[0];
-            //coordinatesAndVelocity[1] = Physics.tempCoordinates[1];
-            System.out.println("x: "+coordinatesAndVelocity[0] +" y: "+ coordinatesAndVelocity[1]);
-
-            //return coordinatesAndVelocity;
+            coordinatesAndVelocity[0] = tempCoordinates[0];
+            coordinatesAndVelocity[1] = tempCoordinates[1];
         }
 
+        return coordinatesAndVelocity;
     }
 }
Index: core/src/physics/sytem/Physics.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package physics.sytem;\r\n\r\nimport com.mygdx.game.main.DataField;\r\n\r\nimport java.util.function.BiFunction;\r\n\r\npublic class Physics extends Thread{\r\n\r\n    public final double GRAVITY = 9.81;\r\n\r\n    /**\r\n     * Method that calculates acceleration in the X direction\r\n     * @param coordinatesAndVelocity an array with coordinates X and Y on first two positions and velocities X and Y in 3,4 positions\r\n     * @param terrain the function of two variables describing the terrain surface\r\n     * @param friction the kinetic friction acting upon a ball\r\n     * @return the acceleration in the X direction\r\n     */\r\n    //acceleration in the X-direction\r\n    public double accelerationX(double [] coordinatesAndVelocity, BiFunction <Double, Double, Double> terrain, double friction){\r\n        double acc;\r\n        acc = -GRAVITY *derivativeXValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1]) - friction* GRAVITY * ((coordinatesAndVelocity[2])/(Math.sqrt((coordinatesAndVelocity[2]*coordinatesAndVelocity[2] + coordinatesAndVelocity[3]*coordinatesAndVelocity[3]))));\r\n        return acc;\r\n    }\r\n\r\n    /**\r\n     * Method that calculates acceleration in the Y direction\r\n     * @param coordinatesAndVelocity an array with coordinates X and Y on first two positions and velocities X and Y in 3,4 positions\r\n     * @param terrain the function of two variables describing the terrain surface\r\n     * @param friction the kinetic friction acting upon a ball\r\n     * @return the acceleration in the Y direction\r\n     */\r\n\r\n    //acceleration in the Y-direction\r\n    public double accelerationY(double [] coordinatesAndVelocity, BiFunction <Double, Double, Double> terrain, double friction){\r\n        double acc;\r\n        acc = -GRAVITY *derivativeYValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1]) - friction* GRAVITY * ((coordinatesAndVelocity[3])/(Math.sqrt((coordinatesAndVelocity[2]*coordinatesAndVelocity[2] + coordinatesAndVelocity[3]*coordinatesAndVelocity[3]))));\r\n        return acc;\r\n    }\r\n\r\n    //accelerationX2 and accelerationY2 are used, when the total velocity is exactly 0\r\n    public double accelerationX2(double [] coordinatesAndVelocity, BiFunction <Double, Double, Double> terrain, double friction)\r\n    {\r\n        double acc;\r\n\r\n        acc = -GRAVITY * derivativeXValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1]) - friction * GRAVITY * (derivativeXValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1])/(Math.sqrt((derivativeXValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1])*derivativeXValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1]) + derivativeYValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1])*derivativeYValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1])))));\r\n        return acc;\r\n    }\r\n\r\n    public double accelerationY2(double [] coordinatesAndVelocity, BiFunction <Double, Double, Double> terrain, double friction)\r\n    {\r\n        double acc;\r\n        acc = -GRAVITY * derivativeYValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1]) - friction * GRAVITY * (derivativeYValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1])/(Math.sqrt((derivativeXValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1])*derivativeXValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1]) + derivativeYValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1])*derivativeYValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1])))));\r\n        return acc;\r\n    }\r\n\r\n    /**\r\n     * Method that calculates a value of derviative with respect to X at a certain point (x,y)\r\n     * @param terrain the function of two variables describing the terrain surface\r\n     * @param xValue the x-coordinate of the point in which the derivative is calculated\r\n     * @param yValue the y-coordinate of the point in which the derivative is calculated\r\n     * @return the result of plugging in (x,y) coordinates in the X-derivative\r\n     */\r\n    //returns result of plugging in function values to a partial derivative with respect to X\r\n    private static double derivativeXValue(BiFunction <Double, Double, Double> terrain, double xValue, double yValue) {\r\n        BiFunction<Double,Double,Double> result = (x,y)->\r\n                (terrain.apply(x + 0.0000000001, y) - terrain.apply(x, y)) / 0.0000000001;\r\n        return result.apply(xValue,yValue);\r\n    }\r\n\r\n    /**\r\n     * Method that calculates a value of derviative with respect to Y at a certain point (x,y)\r\n     * @param terrain the function of two variables describing the terrain surface\r\n     * @param xValue the x-coordinate of the point in which the derivative is calculated\r\n     * @param yValue the y-coordinate of the point in which the derivative is calculated\r\n     * @return the result of plugging in (x,y) coordinates in the Y-derivative\r\n     */\r\n    //returns result of plugging in function values to a partial derivative with respect to Y\r\n    private static double derivativeYValue(BiFunction <Double, Double, Double> terrain, double xValue, double yValue) {\r\n        BiFunction<Double,Double,Double> result = (x,y)->\r\n                (terrain.apply(x , y+ 0.0000000001) - terrain.apply(x, y)) / 0.0000000001;\r\n\r\n        return result.apply(xValue,yValue);\r\n    }\r\n\r\n    /**\r\n     * Method that checks whether the MAX_SPEED is exceeded, if so then it prevserves the direction of the resultant vector but shortens it to MAX_LENGTH\r\n     * @param coordinatesAndVelocity an array with coordinates X and Y on first two positions and velocities X and Y in 3,4 positions\r\n     * @return an array with coordinates X and Y on first two positions and velocities X and Y in 3,4 positions with shortened vectors\r\n     */\r\n\r\n    public double[] maxSpeedReached(double [] coordinatesAndVelocity)\r\n    {\r\n        double unitVectorX = 0;\r\n        double unitVectorY = 0;\r\n        if(Math.sqrt(Math.pow(coordinatesAndVelocity[2], 2) + Math.pow(coordinatesAndVelocity[3], 2)) > 5){\r\n            unitVectorX = (coordinatesAndVelocity[2]/(Math.sqrt(Math.pow(coordinatesAndVelocity[2], 2) + Math.pow(coordinatesAndVelocity[3], 2))));\r\n            unitVectorY = (coordinatesAndVelocity[3]/(Math.sqrt(Math.pow(coordinatesAndVelocity[2], 2) + Math.pow(coordinatesAndVelocity[3], 2))));\r\n            coordinatesAndVelocity[2] = 5 * unitVectorX;\r\n            coordinatesAndVelocity[3] = 5 * unitVectorY;\r\n        }\r\n        return coordinatesAndVelocity;\r\n    }\r\n\r\n    /**\r\n     * A method that checks whether a ball has stopped due to the friction and resulting velocity\r\n     * @param coordinatesAndVelocity an array with coordinates X and Y on first two positions and velocities X and Y in 3,4 positions\r\n     * @param staticFriction the static friction acting upon a ball\r\n     * @param terrain the function of two variables describing the terrain surface\r\n     * @return true if the ball has stopped, false if not\r\n     */\r\n    public boolean hasBallStopped(double [] coordinatesAndVelocity, double staticFriction, BiFunction <Double, Double, Double> terrain, double step)\r\n    {\r\n        double scalingSlope = 0.0008;\r\n\r\n        if(Math.abs(coordinatesAndVelocity[2]) < step &&\r\n                Math.abs(coordinatesAndVelocity[3]) < step\r\n                && (derivativeXValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1])< Math.abs(scalingSlope))\r\n                && (derivativeYValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1])< Math.abs(scalingSlope)))\r\n        { return true; }\r\n\r\n        else if(Math.abs(coordinatesAndVelocity[2]) < step\r\n                && Math.abs(coordinatesAndVelocity[3]) < step\r\n                && ((derivativeXValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1])>=Math.abs(scalingSlope)\r\n                || derivativeYValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1])>=Math.abs(scalingSlope))))\r\n        {\r\n            if(staticFriction>Math.sqrt((Math.pow(derivativeXValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1]), 2))+\r\n                    Math.pow(derivativeYValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1]), 2)))\r\n            { return true; }\r\n            else\r\n            { return false; }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        double[] coords = {0,0};\r\n        double[] velocityXY = {0,0,8,6};\r\n        double staticFriction = 0.9;\r\n//      BiFunction<Double,Double,Double> terrain = (x,y)->(double)(0.5 * ( Math.sin(x+y) / 7  + 0.9 + y ) );\r\n        //BiFunction<Double,Double,Double> terrain = (x,y)->(double)(Math.pow(Math.E, -((x*x+y*y)/40)));\r\n        //System.out.println(derivativeYValue(terrain,1,1));\r\n//      BiFunction<Double,Double,Double> terrain = (x,y)->(double)(Math.sin(x + y));\r\n        Physics p = new Physics();\r\n        double velx = p.maxSpeedReached(velocityXY)[2];\r\n        double vely = p.maxSpeedReached(velocityXY)[3];\r\n        System.out.println(velx + \" \" + vely);\r\n//      System.out.println(p.hasBallStopped(coords, velocity[0], velocity[1], staticFriction, terrain));\r\n//      System.out.println(p.derivativeXValue(terrain, 1,1));\r\n//      System.out.println(p.derivativeYValue(terrain, 1,1));\r\n//      System.out.println(p.accelerationX(coords,1,1, terrain, 0.15));\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/src/physics/sytem/Physics.java b/core/src/physics/sytem/Physics.java
--- a/core/src/physics/sytem/Physics.java	(revision 5e2d10af338e78072bc78487bcfd9e133a4f4a83)
+++ b/core/src/physics/sytem/Physics.java	(date 1650364772000)
@@ -6,6 +6,7 @@
 
 public class Physics extends Thread{
 
+
     public final double GRAVITY = 9.81;
 
     /**
@@ -29,14 +30,12 @@
      * @param friction the kinetic friction acting upon a ball
      * @return the acceleration in the Y direction
      */
-
     //acceleration in the Y-direction
     public double accelerationY(double [] coordinatesAndVelocity, BiFunction <Double, Double, Double> terrain, double friction){
         double acc;
         acc = -GRAVITY *derivativeYValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1]) - friction* GRAVITY * ((coordinatesAndVelocity[3])/(Math.sqrt((coordinatesAndVelocity[2]*coordinatesAndVelocity[2] + coordinatesAndVelocity[3]*coordinatesAndVelocity[3]))));
         return acc;
     }
-
     //accelerationX2 and accelerationY2 are used, when the total velocity is exactly 0
     public double accelerationX2(double [] coordinatesAndVelocity, BiFunction <Double, Double, Double> terrain, double friction)
     {
@@ -111,23 +110,28 @@
     public boolean hasBallStopped(double [] coordinatesAndVelocity, double staticFriction, BiFunction <Double, Double, Double> terrain, double step)
     {
         double scalingSlope = 0.0008;
+        System.out.println("IN STOPPED!!!!!!!!!!!!!!!!!!!!!!!!");
+        System.out.println("VELLLL!"+coordinatesAndVelocity[2]+"  "+coordinatesAndVelocity[3]);
+        System.out.println("ACC X!"+ accelerationX(coordinatesAndVelocity, terrain, DataField.kFriction));
+        System.out.println("ACC Y!"+ accelerationY(coordinatesAndVelocity, terrain, DataField.kFriction));
 
-        if(Math.abs(coordinatesAndVelocity[2]) < step &&
-                Math.abs(coordinatesAndVelocity[3]) < step
+        if(Math.abs(coordinatesAndVelocity[2]) < step* Math.abs(accelerationX(coordinatesAndVelocity, terrain, DataField.kFriction))&&
+                Math.abs(coordinatesAndVelocity[3]) < step * Math.abs(accelerationY(coordinatesAndVelocity, terrain, DataField.kFriction))
                 && (derivativeXValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1])< Math.abs(scalingSlope))
                 && (derivativeYValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1])< Math.abs(scalingSlope)))
-        { return true; }
+        {  System.out.println("IN STOPPED 1111111111 !!!!!!!!!!!!!!!!!!!!!!!!"+coordinatesAndVelocity[2]+"  "+coordinatesAndVelocity[3]);
+            return true; }
 
-        else if(Math.abs(coordinatesAndVelocity[2]) < step
-                && Math.abs(coordinatesAndVelocity[3]) < step
+        else if(Math.abs(coordinatesAndVelocity[2]) < step * Math.abs(accelerationX(coordinatesAndVelocity, terrain, DataField.kFriction))
+                && Math.abs(coordinatesAndVelocity[3]) < step * Math.abs(accelerationY(coordinatesAndVelocity, terrain, DataField.kFriction))
                 && ((derivativeXValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1])>=Math.abs(scalingSlope)
                 || derivativeYValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1])>=Math.abs(scalingSlope))))
         {
             if(staticFriction>Math.sqrt((Math.pow(derivativeXValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1]), 2))+
                     Math.pow(derivativeYValue(terrain, coordinatesAndVelocity[0], coordinatesAndVelocity[1]), 2)))
-            { return true; }
+            {  System.out.println("IN STOPPED 22222222222 !!!!!!!!!!!!!!!!!!!!!!!!");return true; }
             else
-            { return false; }
+            {  System.out.println("IN STOPPED 3333333333333333 !!!!!!!!!!!!!!!!!!!!!!!!");return false; }
         }
         return false;
     }
Index: core/src/physics/sytem/Tree.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package physics.sytem;\r\n\r\npublic class Tree implements Obstacles{\r\n\r\n    private double coordX;\r\n    private double coordY;\r\n    private final double radius = 2;\r\n\r\n    public Tree(double coordX, double coordY) {\r\n        this.coordX = coordX;\r\n        this.coordY = coordY;\r\n    }\r\n    @Override\r\n    public double[] collide(double[] coordsAndVelocity) {\r\n        //TODO:\r\n        if(coordsAndVelocity[0] < coordX || coordsAndVelocity[0] <= -coordX){\r\n            coordsAndVelocity[2] = - coordsAndVelocity[2];\r\n        }\r\n        if(coordsAndVelocity[1] >= coordY || coordsAndVelocity[1] <= -coordY){\r\n            coordsAndVelocity[3] = - coordsAndVelocity[3];\r\n        }\r\n        return coordsAndVelocity;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/src/physics/sytem/Tree.java b/core/src/physics/sytem/Tree.java
--- a/core/src/physics/sytem/Tree.java	(revision 5e2d10af338e78072bc78487bcfd9e133a4f4a83)
+++ b/core/src/physics/sytem/Tree.java	(date 1650398874233)
@@ -1,5 +1,9 @@
 package physics.sytem;
 
+import com.mygdx.game.main.DataField;
+
+import java.util.ArrayList;
+
 public class Tree implements Obstacles{
 
     private double coordX;
@@ -11,13 +15,13 @@
         this.coordY = coordY;
     }
     @Override
-    public double[] collide(double[] coordsAndVelocity) {
-        //TODO:
-        if(coordsAndVelocity[0] < coordX || coordsAndVelocity[0] <= -coordX){
-            coordsAndVelocity[2] = - coordsAndVelocity[2];
-        }
-        if(coordsAndVelocity[1] >= coordY || coordsAndVelocity[1] <= -coordY){
-            coordsAndVelocity[3] = - coordsAndVelocity[3];
+    public double[] collide(double[] coordsAndVelocity,  double[] tempCoordinates) {
+        if((Math.pow(radius ,2)>(Math.pow((coordY -coordsAndVelocity[0]), 2 )+Math.pow((coordY-coordsAndVelocity[1]), 2 ))))
+        {
+            coordsAndVelocity[0] = tempCoordinates[0];
+            coordsAndVelocity[1] = tempCoordinates[1];
+
+            System.out.println("you hit the tree!!!");
         }
         return coordsAndVelocity;
     }
Index: core/src/com/mygdx/game/main/MainGame.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mygdx.game.main;\r\n\r\nimport com.badlogic.gdx.*;\r\nimport com.badlogic.gdx.graphics.Color;\r\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\r\nimport com.badlogic.gdx.graphics.glutils.ShapeRenderer;\r\nimport com.badlogic.gdx.math.Vector2;\r\nimport com.badlogic.gdx.utils.viewport.ScreenViewport;\r\nimport java.util.ArrayList;\r\nimport java.util.LinkedList;\r\nimport java.util.Map;\r\nimport java.util.function.BiFunction;\r\n\r\npublic class MainGame extends ApplicationAdapter {\r\n\tArrayList<Float> coordsX;\r\n\tArrayList<Float> coordsY;\r\n\r\n\tSpriteBatch batch;\r\n\tShapeRenderer s;\r\n\tBall gBall;\r\n\tScreenViewport viewport;\r\n\tHole myHole;\r\n\tTree tree;\r\n\r\n\tpublic static final float PPM =10f;\r\n\r\n\tfloat holeX= (float) DataField.targetRXY[1];\r\n\tfloat holeY= (float) DataField.targetRXY[2];\r\n\r\n\t@Override\r\n\tpublic void create (){\r\n\t\tpointGenerator();\r\n\t\tviewport = new ScreenViewport();\r\n\t\tviewport.setUnitsPerPixel(1/PPM);\r\n\t\tviewport.update(Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\r\n\t\tmyHole = new Hole();\r\n\t\tbatch = new SpriteBatch();\r\n\t\tgBall= new Ball();\r\n\t\t//TODO implement trees for each tree: draw tree.\r\n\t\ttree = new Tree();\r\n\t\ttree.setTreePos(4,4,PPM);\r\n\t\ts = new ShapeRenderer();\r\n\t\tGdx.gl.glClearColor(.5f,0,.5f,1);\r\n\t\tmyHole.setHolePos(holeX*1.8f,holeY*1.8f,PPM);//1.8f why?\r\n\t}\r\n\r\n\t/**\r\n\t * This method sets the color of the terrain based on the height of the point.\r\n\t * @param val: this is the height of the terrain\r\n\t * @return: the color based on the height\r\n\t */\r\n\r\n\tpublic Color getColorHeight(double val) {\r\n\r\n\t\tif(val <-10||val>10){\r\n\t\t\treturn Color.BLACK;\r\n\t\t}\r\n\r\n\t\tint greenPositive = (int) (55 + val * 20);\r\n\t\tint bluePositive = (int) (11 + val * 4);\r\n\t\tint greenNegative = (int) Math.abs(76 + val * 6);\r\n\t\tint blueNegative = (int) Math.abs(255 +val * 20);\r\n\r\n\t\tif(val>=0){\r\n\t\t\treturn new Color(Color.rgba8888(0 / 255f, greenPositive / 255f, bluePositive / 255f, 1));\r\n\t\t}\r\n\r\n\t\tif (val < 0) {\r\n\t\t\treturn new Color(Color.rgba8888(0 / 255f, greenNegative / 255f, blueNegative / 255f, 1));\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *This method calculates height\r\n\t * @param x gets the x-coordinate of the points of which the height is being calculated\r\n\t * @param y\r\n\t * @return\r\n\t */\r\n\tpublic double calcHeight(double x,double y){\r\n//\t\treturn 0;\r\n//\t\treturn 0.1*x + 1;\r\n//\t\treturn Math.pow(Math.E,(-(((x*x)+(y*y))/40)));\r\n//\t\treturn (-Math.E*.5)*((-(x*x)-(y*y))/35f);\r\n//\t\treturn 0.05*((x*x)+(y*y));\r\n//\t\treturn Math.cos(x+(y*y)); //testing\r\n\t\treturn  1;\r\n\t}\r\n\r\n\t/**\r\n\t * The void method renders the screen in x fps (x: is gotten from the DesktopLauncher file).\r\n\t */\r\n\t@Override\r\n\tpublic void render (){\r\n\t\ts.setProjectionMatrix(viewport.getCamera().combined);\r\n\t\ts.begin(ShapeRenderer.ShapeType.Filled);\r\n\r\n\r\n\t\tgBall.setPos((DataField.x)*1.8f,(DataField.y)*1.8f,PPM);\r\n\t\t//draws lines based on the height at the coord that the line is drawn at\r\n\t\tfor (int i = 0; i < coordsX.size(); i++) {\r\n\t\t\tfor (int j = 0; j < coordsY.size(); j++) {\r\n\r\n\t\t\t\tdouble t = calcHeight(coordsX.get(i),coordsY.get(j));\r\n\t\t\t\ts.setColor(getColorHeight(t));//bad implementation should be stored and called from elsewhere.\r\n\t\t\t\ts.setColor(getColorHeight(t));\r\n\r\n\t\t\t\tif(coordsX.get(i)>DataField.sandPit[0]&&coordsX.get(i)<DataField.sandPit[1]&&coordsY.get(j)>DataField.sandPit[2]&&coordsY.get(j)<DataField.sandPit[3]){\r\n\t\t\t\t\ts.setColor(Color.YELLOW);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i + 1 < coordsX.size() && j + 1 < coordsY.size())\r\n\t\t\t\t\ts.rectLine(new Vector2(coordsX.get(i)*2.5f,coordsY.get(j)*2.5f),new Vector2(coordsX.get(i+1)*2.5f,coordsY.get(j)*2.5f),2f);\r\n\r\n//\t\t\t\tif (i + 1 < coordsX.size() && j + 1 < coordsY.size())\r\n//\t\t\t\t\ts.line(coordsX.get(i)*2.5f,coordsY.get(j)*2.5f,coordsX.get(i)*2.5f,coordsY.get(j+1)*2.5f);\r\n//\r\n//\t\t\t\tif (i + 1 < coordsX.size() && j + 1 < coordsY.size())\r\n//\t\t\t\t\ts.line(coordsX.get(i)*2.5f,coordsY.get(j)*2.5f,coordsX.get(i+1)*2.5f,coordsY.get(j)*2.5f);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n//\t\ts.rect(tree.treeHitBox.x, tree.treeHitBox.y,8,5.8f ); hitboxes\r\n//\t\ts.rect(gBall.ballHitBox.x, gBall.ballHitBox.y,1,1 );\r\n\t\ts.end();\r\n\r\n\t\tbatch.setProjectionMatrix(viewport.getCamera().combined);\r\n\t\tbatch.begin();\r\n\r\n\t\tif (gBall.ballHitBox.overlaps(tree.treeHitBox)){\r\n\t\t\ttree.setOpac(true);\r\n\t\t}\r\n\t\telse{\r\n\t\t\ttree.setOpac(false);\r\n\t\t}\r\n\r\n\r\n\t\tmyHole.draw(batch);\r\n\r\n\t\tgBall.draw(batch);\r\n\t\ttree.draw(batch);\r\n\t\ttree.drawLeaves(batch);\r\n\t\tbatch.end();\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The pointGenerator method creates all the points on which the tiles are drawn.\r\n\t */\r\n\tpublic void pointGenerator(){\r\n\r\n\t\tcoordsX = new ArrayList<Float>();\r\n\t\tcoordsY = new ArrayList<Float>();\r\n\r\n\t\tfor (float i = -(25); i <= (25); i= i+.18f) {//TODO fix zoom offset on non reoccurring formula. based on .25\r\n\t\t\t//this for loop dertermines which points are painted on the screen, the use above starts from -(pointAmount)/2f\r\n\t\t\t// and then loops through the whole array which isnt ideal. we need to make the array smaller with out losing definition.\r\n\t\t\t\tcoordsX.add(i);//generates coords from -pointA/2 to +pointA/2(eg screen size =10 its results in [-5...+5])\r\n\t\t\t\tcoordsY.add(i);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * This method disposes all the elements that were previously on the screen.\r\n\t */\r\n\t@Override\r\n\tpublic void dispose () {\r\n\t\ts.dispose();\r\n\t\tbatch.dispose();\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/src/com/mygdx/game/main/MainGame.java b/core/src/com/mygdx/game/main/MainGame.java
--- a/core/src/com/mygdx/game/main/MainGame.java	(revision 5e2d10af338e78072bc78487bcfd9e133a4f4a83)
+++ b/core/src/com/mygdx/game/main/MainGame.java	(date 1650367692178)
@@ -38,7 +38,7 @@
 		gBall= new Ball();
 		//TODO implement trees for each tree: draw tree.
 		tree = new Tree();
-		tree.setTreePos(4,4,PPM);
+		tree.setTreePos(10,10,PPM);
 		s = new ShapeRenderer();
 		Gdx.gl.glClearColor(.5f,0,.5f,1);
 		myHole.setHolePos(holeX*1.8f,holeY*1.8f,PPM);//1.8f why?
Index: core/src/physics/sytem/Obstacles.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package physics.sytem;\r\n\r\npublic interface Obstacles {\r\n    public double [] collide(double [] coordsAndVelocity);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/src/physics/sytem/Obstacles.java b/core/src/physics/sytem/Obstacles.java
--- a/core/src/physics/sytem/Obstacles.java	(revision 5e2d10af338e78072bc78487bcfd9e133a4f4a83)
+++ b/core/src/physics/sytem/Obstacles.java	(date 1650366251000)
@@ -1,5 +1,5 @@
 package physics.sytem;
 
 public interface Obstacles {
-    public double [] collide(double [] coordsAndVelocity);
+    public double [] collide(double [] coordsAndVelocity, double[] tempCoordinates) ;
 }
Index: core/src/physics/sytem/SandPits.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package physics.sytem;\r\n\r\nimport com.mygdx.game.main.DataField;\r\n\r\npublic class SandPits implements DifferentTerrain {\r\n\r\n    private double kFrictionSand;\r\n    private double sFrictionSand;\r\n\r\n    public SandPits(double [] sandPit, double kFriction, double sFriction){\r\n        this.kFrictionSand = kFriction;\r\n        this.sFrictionSand = sFriction;\r\n    }\r\n\r\n    public void change(double [] coordsAndVelocity){\r\n        double tempSatatic = DataField.sFriction;\r\n        double tempKinetic = DataField.kFriction;\r\n\r\n        if(coordsAndVelocity[0] > DataField.sandPit[0] && coordsAndVelocity[0] < DataField.sandPit[1] &&\r\n                coordsAndVelocity[1] > DataField.sandPit[2] && coordsAndVelocity[1] < DataField.sandPit[3]) {\r\n            DataField.sFriction = sFrictionSand;\r\n            DataField.kFriction = kFrictionSand;\r\n        }else {\r\n            DataField.sFriction = tempSatatic;\r\n            DataField.kFriction = tempKinetic;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/src/physics/sytem/SandPits.java b/core/src/physics/sytem/SandPits.java
--- a/core/src/physics/sytem/SandPits.java	(revision 5e2d10af338e78072bc78487bcfd9e133a4f4a83)
+++ b/core/src/physics/sytem/SandPits.java	(date 1650366251000)
@@ -25,4 +25,20 @@
             DataField.kFriction = tempKinetic;
         }
     }
+
+    @Override
+    public void change(double[] coordsAndVelocity, double[] tempCoordinates) {
+        double tempSatatic = DataField.sFriction;
+        double tempKinetic = DataField.kFriction;
+
+        if(coordsAndVelocity[0] > DataField.sandPit[0] && coordsAndVelocity[0] < DataField.sandPit[1] &&
+                coordsAndVelocity[1] > DataField.sandPit[2] && coordsAndVelocity[1] < DataField.sandPit[3]) {
+            DataField.sFriction = sFrictionSand;
+            DataField.kFriction = kFrictionSand;
+        }else {
+            DataField.sFriction = tempSatatic;
+            DataField.kFriction = tempKinetic;
+        }
+        
+    }
 }
Index: write.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>end Coordinates 1= 0.043 , 0.034\r\nend Coordinates 2= 2.09 , 3.07\r\nend Coordinates 3= 0.267 , 0.1565\r\nend Coordinates 4= 46.70,  , f(x,y) \r\nend Coordinates 5= 2.0456 , 2.023\r\nend Coordinates 6= 3.045 , 3.054\r\nend Coordinates 7= 4.06 , 4.06\r\nend Coordinates 8= 0.043 , 0.034\r\nend Coordinates 9= 2.09 , 3.07\r\nend Coordinates 10= 0.267 , 0.1565\r\nend Coordinates 11= 46.70,  , f(x,y) \r\nend Coordinates 12= 2.0456 , 2.023\r\nend Coordinates 13= 3.045 , 3.054\r\nend Coordinates 14= 4.06 , 4.06\r\nend Coordinates 15= 0.043 , 0.034\r\nend Coordinates 16= 2.09 , 3.07\r\nend Coordinates 17= 0.267 , 0.1565\r\nend Coordinates 18= 46.70,  , f(x,y) \r\nend Coordinates 19= 2.0456 , 2.023\r\nend Coordinates 20= 3.045 , 3.054\r\nend Coordinates 21= 4.06 , 4.06\r\nend Coordinates 22= 0.043 , 0.034\r\nend Coordinates 23= 2.09 , 3.07\r\nend Coordinates 24= 0.267 , 0.1565\r\nend Coordinates 25= 46.70,  , f(x,y) \r\nend Coordinates 26= 2.0456 , 2.023\r\nend Coordinates 27= 3.045 , 3.054\r\nend Coordinates 28= 4.06 , 4.06\r\nend Coordinates 29= 0.043 , 0.034\r\nend Coordinates 30= 2.09 , 3.07\r\nend Coordinates 31= 0.267 , 0.1565\r\nend Coordinates 32= 46.70,  , f(x,y) \r\nend Coordinates 33= 2.0456 , 2.023\r\nend Coordinates 34= 3.045 , 3.054\r\nend Coordinates 35= 4.06 , 4.06\r\nend Coordinates 36= 0.043 , 0.034\r\nend Coordinates 37= 2.09 , 3.07\r\nend Coordinates 38= 0.267 , 0.1565\r\nend Coordinates 39= 46.70,  , f(x,y) \r\nend Coordinates 40= 2.0456 , 2.023\r\nend Coordinates 41= 3.045 , 3.054\r\nend Coordinates 42= 4.06 , 4.06\r\nend Coordinates 43= 0.043 , 0.034\r\nend Coordinates 44= 2.09 , 3.07\r\nend Coordinates 45= 0.267 , 0.1565\r\nend Coordinates 46= 46.70,  , f(x,y) \r\nend Coordinates 47= 2.0456 , 2.023\r\nend Coordinates 48= 3.045 , 3.054\r\nend Coordinates 49= 4.06 , 4.06\r\nend Coordinates 50= 0.043 , 0.034\r\nend Coordinates 51= 2.09 , 3.07\r\nend Coordinates 52= 0.267 , 0.1565\r\nend Coordinates 53= 46.70,  , f(x,y) \r\nend Coordinates 54= 2.0456 , 2.023\r\nend Coordinates 55= 3.045 , 3.054\r\nend Coordinates 56= 4.06 , 4.06\r\nend Coordinates 57= 0.043 , 0.034\r\nend Coordinates 58= 2.09 , 3.07\r\nend Coordinates 59= 0.267 , 0.1565\r\nend Coordinates 60= 46.70,  , f(x,y) \r\nend Coordinates 61= 2.0456 , 2.023\r\nend Coordinates 62= 3.045 , 3.054\r\nend Coordinates 63= 4.06 , 4.06\r\nend Coordinates 64= 0.043 , 0.034\r\nend Coordinates 65= 2.09 , 3.07\r\nend Coordinates 66= 0.267 , 0.1565\r\nend Coordinates 67= 46.70,  , f(x,y) \r\nend Coordinates 68= 2.0456 , 2.023\r\nend Coordinates 69= 3.045 , 3.054\r\nend Coordinates 70= 4.06 , 4.06\r\nend Coordinates 71= 0.043 , 0.034\r\nend Coordinates 72= 2.09 , 3.07\r\nend Coordinates 73= 0.267 , 0.1565\r\nend Coordinates 74= 46.70,  , f(x,y) \r\nend Coordinates 75= 2.0456 , 2.023\r\nend Coordinates 76= 3.045 , 3.054\r\nend Coordinates 77= 4.06 , 4.06\r\nend Coordinates 78= 0.043 , 0.034\r\nend Coordinates 79= 2.09 , 3.07\r\nend Coordinates 80= 0.267 , 0.1565\r\nend Coordinates 81= 46.70,  , f(x,y) \r\nend Coordinates 82= 2.0456 , 2.023\r\nend Coordinates 83= 3.045 , 3.054\r\nend Coordinates 84= 4.06 , 4.06\r\nend Coordinates 85= 0.043 , 0.034\r\nend Coordinates 86= 2.09 , 3.07\r\nend Coordinates 87= 0.267 , 0.1565\r\nend Coordinates 88= 46.70,  , f(x,y) \r\nend Coordinates 89= 2.0456 , 2.023\r\nend Coordinates 90= 3.045 , 3.054\r\nend Coordinates 91= 4.06 , 4.06\r\nend Coordinates 92= 0.043 , 0.034\r\nend Coordinates 93= 2.09 , 3.07\r\nend Coordinates 94= 0.267 , 0.1565\r\nend Coordinates 95= 46.70,  , f(x,y) \r\nend Coordinates 96= 2.0456 , 2.023\r\nend Coordinates 97= 3.045 , 3.054\r\nend Coordinates 98= 4.06 , 4.06\r\nend Coordinates 99= 0.043 , 0.034\r\nend Coordinates 100= 2.09 , 3.07\r\nend Coordinates 101= 0.267 , 0.1565\r\nend Coordinates 102= 46.70,  , f(x,y) \r\nend Coordinates 103= 2.0456 , 2.023\r\nend Coordinates 104= 3.045 , 3.054\r\nend Coordinates 105= 4.06 , 4.06\r\nend Coordinates 106= 0.043 , 0.034\r\nend Coordinates 107= 2.09 , 3.07\r\nend Coordinates 108= 0.267 , 0.1565\r\nend Coordinates 109= 46.70,  , f(x,y) \r\nend Coordinates 110= 2.0456 , 2.023\r\nend Coordinates 111= 3.045 , 3.054\r\nend Coordinates 112= 4.06 , 4.06\r\nend Coordinates 113= 0.043 , 0.034\r\nend Coordinates 114= 2.09 , 3.07\r\nend Coordinates 115= 0.267 , 0.1565\r\nend Coordinates 116= 46.70,  , f(x,y) \r\nend Coordinates 117= 2.0456 , 2.023\r\nend Coordinates 118= 3.045 , 3.054\r\nend Coordinates 119= 4.06 , 4.06\r\nend Coordinates 120= 0.043 , 0.034\r\nend Coordinates 121= 2.09 , 3.07\r\nend Coordinates 122= 0.267 , 0.1565\r\nend Coordinates 123= 46.70,  , f(x,y) \r\nend Coordinates 124= 2.0456 , 2.023\r\nend Coordinates 125= 3.045 , 3.054\r\nend Coordinates 126= 4.06 , 4.06\r\nend Coordinates 127= 0.043 , 0.034\r\nend Coordinates 128= 2.09 , 3.07\r\nend Coordinates 129= 0.267 , 0.1565\r\nend Coordinates 130= 1.70,  , f(x,y) \r\nend Coordinates 131= 2.0456 , 2.023\r\nend Coordinates 132= 3.045 , 3.054\r\nend Coordinates 133= 4.06 , 4.06\r\nend Coordinates 134= 0.043 , 0.034\r\nend Coordinates 135= 2.09 , 3.07\r\nend Coordinates 136= 0.267 , 0.1565\r\nend Coordinates 137= 1.70,  , f(x,y) \r\nend Coordinates 138= 2.0456 , 2.023\r\nend Coordinates 139= 3.045 , 3.054\r\nend Coordinates 140= 4.06 , 4.06\r\nend Coordinates 141= 0.043 , 0.034\r\nend Coordinates 142= 2.09 , 3.07\r\nend Coordinates 143= 0.267 , 0.1565\r\nend Coordinates 144= 1.70,  , f(x,y) \r\nend Coordinates 145= 0 , 0\r\nend Coordinates 146= 0 , 0\r\nend Coordinates 147= 0 , 0\r\nend Coordinates 148= 0.043 , 0.034\r\nend Coordinates 149= 0.267 , 0.1565\r\nend Coordinates 150= 1.70,  , f(x,y) \r\nend Coordinates 151= 2.09 , 3.07\r\nend Coordinates 152= 0 , 0\r\nend Coordinates 153= 0 , 0\r\nend Coordinates 154= 0 , 0\r\nend Coordinates 155= 0.043 , 0.034\r\nend Coordinates 156= 0.267 , 0.1565\r\nend Coordinates 157= 1.70,  , f(x,y) \r\nend Coordinates 158= 2.09 , 3.07\r\nend Coordinates 159= -10 , -3\r\nend Coordinates 160= 0 , 0\r\nend Coordinates 161= 0 , 0\r\nend Coordinates 162= 10 , 10\r\nend Coordinates 163= 0.267 , 0.1565\r\nend Coordinates 164= 1.70,  , f(x,y) \r\nend Coordinates 165= 2.09 , 3.07\r\nend Coordinates 166= -10 , -3\r\nend Coordinates 167= 0 , 0\r\nend Coordinates 168= 0 , 0\r\nend Coordinates 169= 10 , 10\r\nend Coordinates 170= 0.267 , 0.1565\r\nend Coordinates 171= 1.70,  , f(x,y) \r\nend Coordinates 172= 2.09 , 3.07\r\nend Coordinates 173= -10 , -3\r\nend Coordinates 174= 0 , 0\r\nend Coordinates 175= 0 , 0\r\nend Coordinates 176= 20 , 20\r\nend Coordinates 177= 0.267 , 0.1565\r\nend Coordinates 178= 1.70,  , f(x,y) \r\nend Coordinates 179= 2.09 , 3.07\r\nend Coordinates 180= -10 , -3\r\nend Coordinates 181= 0 , 0\r\nend Coordinates 182= 0 , 0\r\nend Coordinates 183= 20 , 20\r\nend Coordinates 184= 0.267 , 0.1565\r\nend Coordinates 185= 1.70,  , f(x,y) \r\nend Coordinates 186= 2.09 , 3.07\r\nend Coordinates 187= -10 , -3\r\nend Coordinates 188= 0 , 0\r\nend Coordinates 189= 0 , 0\r\nend Coordinates 190= 40 , 40\r\nend Coordinates 191= 0.267 , 0.1565\r\nend Coordinates 192= 1.70,  , f(x,y) \r\nend Coordinates 193= 2.09 , 3.07\r\nend Coordinates 194= -10 , -3\r\nend Coordinates 195= 0 , 0\r\nend Coordinates 196= 0 , 0\r\nend Coordinates 197= 40 , 40\r\nend Coordinates 198= 0.267 , 0.1565\r\nend Coordinates 199= 1.70,  , f(x,y) \r\nend Coordinates 200= 2.09 , 3.07\r\nend Coordinates 201= -10 , -3\r\nend Coordinates 202= 0 , 0\r\nend Coordinates 203= 0 , 0\r\nend Coordinates 204= 10 , 10\r\nend Coordinates 205= 0.267 , 0.1565\r\nend Coordinates 206= 1.70,  , f(x,y) \r\nend Coordinates 207= 2.09 , 3.07\r\nend Coordinates 208= -10 , -3\r\nend Coordinates 209= 0 , 0\r\nend Coordinates 210= 0 , 0\r\nend Coordinates 211= 10 , 10\r\nend Coordinates 212= 0.267 , 0.1565\r\nend Coordinates 213= 1.70,  , f(x,y) \r\nend Coordinates 214= 2.09 , 3.07\r\nend Coordinates 215= -10 , -3\r\nend Coordinates 216= 0 , 0\r\nend Coordinates 217= 0 , 0\r\nend Coordinates 218= 10 , 10\r\nend Coordinates 219= 0.267 , 0.1565\r\nend Coordinates 220= 1.70,  , f(x,y) \r\nend Coordinates 221= 2.09 , 3.07\r\nend Coordinates 222= -10 , -3\r\nend Coordinates 223= 0 , 0\r\nend Coordinates 224= 0 , 0\r\nend Coordinates 225= 10 , 10\r\nend Coordinates 226= 0.267 , 0.1565\r\nend Coordinates 227= 1.70,  , f(x,y) \r\nend Coordinates 228= 2.09 , 3.07\r\nend Coordinates 229= -10 , -3\r\nend Coordinates 230= 0 , 0\r\nend Coordinates 231= 0 , 0\r\nend Coordinates 232= 10 , 10\r\nend Coordinates 233= 0.267 , 0.1565\r\nend Coordinates 234= 1.70,  , f(x,y) \r\nend Coordinates 235= 2.09 , 3.07\r\nend Coordinates 236= -10 , -3\r\nend Coordinates 237= 0 , 0\r\nend Coordinates 238= 0 , 0\r\nend Coordinates 239= 10 , 10\r\nend Coordinates 240= 0.267 , 0.1565\r\nend Coordinates 241= 1.70,  , f(x,y) \r\nend Coordinates 242= 2.09 , 3.07\r\nend Coordinates 243= -10 , -3\r\nend Coordinates 244= 0 , 0\r\nend Coordinates 245= 0 , 0\r\nend Coordinates 246= 10 , 10\r\nend Coordinates 247= 0.267 , 0.1565\r\nend Coordinates 248= 1.70,  , f(x,y) \r\nend Coordinates 249= 2.09 , 3.07\r\nend Coordinates 250= -10 , -3\r\nend Coordinates 251= 0 , 0\r\nend Coordinates 252= 0 , 0\r\nend Coordinates 253= 10 , 10\r\nend Coordinates 254= 0.267 , 0.1565\r\nend Coordinates 255= 1.70,  , f(x,y) \r\nend Coordinates 256= 2.09 , 3.07\r\nend Coordinates 257= -10 , -3\r\nend Coordinates 258= 0 , 0\r\nend Coordinates 259= 0 , 0\r\nend Coordinates 260= 10 , 10\r\nend Coordinates 261= 0.267 , 0.1565\r\nend Coordinates 262= 1.70,  , f(x,y) \r\nend Coordinates 263= 2.09 , 3.07\r\nend Coordinates 264= -10 , -3\r\nend Coordinates 265= 0 , 0\r\nend Coordinates 266= 0 , 0\r\nend Coordinates 267= 10 , 10\r\nend Coordinates 268= 0.267 , 0.1565\r\nend Coordinates 269= 1.70,  , f(x,y) \r\nend Coordinates 270= 2.09 , 3.07\r\nend Coordinates 271= -10 , -3\r\nend Coordinates 272= 0 , 0\r\nend Coordinates 273= 0 , 0\r\nend Coordinates 274= 10 , 10\r\nend Coordinates 275= 0.267 , 0.1565\r\nend Coordinates 276= 1.70,  , f(x,y) \r\nend Coordinates 277= 2.09 , 3.07\r\nend Coordinates 278= -10 , -3\r\nend Coordinates 279= 0 , 0\r\nend Coordinates 280= 0 , 0\r\nend Coordinates 281= 10 , 10\r\nend Coordinates 282= 0.267 , 0.1565\r\nend Coordinates 283= 1.70,  , f(x,y) \r\nend Coordinates 284= 2.09 , 3.07\r\nend Coordinates 285= -10 , -3\r\nend Coordinates 286= 0 , 0\r\nend Coordinates 287= 0 , 0\r\nend Coordinates 288= 10 , 10\r\nend Coordinates 289= 0.267 , 0.1565\r\nend Coordinates 290= 1.70,  , f(x,y) \r\nend Coordinates 291= 2.09 , 3.07\r\nend Coordinates 292= -10 , -3\r\nend Coordinates 293= 0 , 0\r\nend Coordinates 294= 0 , 0\r\nend Coordinates 295= 10 , 10\r\nend Coordinates 296= 0.267 , 0.1565\r\nend Coordinates 297= 1.70,  , f(x,y) \r\nend Coordinates 298= 2.09 , 3.07\r\nend Coordinates 299= -10 , -3\r\nend Coordinates 300= 0 , 0\r\nend Coordinates 301= 0 , 0\r\nend Coordinates 302= 10 , 10\r\nend Coordinates 303= 0.267 , 0.1565\r\nend Coordinates 304= 1.70,  , f(x,y) \r\nend Coordinates 305= 2.09 , 3.07\r\nend Coordinates 306= -10 , -3\r\nend Coordinates 307= 0 , 0\r\nend Coordinates 308= 0 , 0\r\nend Coordinates 309= 10 , 10\r\nend Coordinates 310= 0.267 , 0.1565\r\nend Coordinates 311= 1.70,  , f(x,y) \r\nend Coordinates 312= 2.09 , 3.07\r\nend Coordinates 313= -10 , -3\r\nend Coordinates 314= 0 , 0\r\nend Coordinates 315= 0 , 0\r\nend Coordinates 316= 10 , 10\r\nend Coordinates 317= 0.267 , 0.1565\r\nend Coordinates 318= 1.70,  , f(x,y) \r\nend Coordinates 319= 2.09 , 3.07\r\nend Coordinates 320= -10 , -3\r\nend Coordinates 321= 0 , 0\r\nend Coordinates 322= 0 , 0\r\nend Coordinates 323= 10 , 10\r\nend Coordinates 324= 0.267 , 0.1565\r\nend Coordinates 325= 1.70,  , f(x,y) \r\nend Coordinates 326= 2.09 , 3.07\r\nend Coordinates 327= -10 , -3\r\nend Coordinates 328= 0 , 0\r\nend Coordinates 329= 0 , 0\r\nend Coordinates 330= 10 , 10\r\nend Coordinates 331= 0.267 , 0.1565\r\nend Coordinates 332= 1.70,  , f(x,y) \r\nend Coordinates 333= 2.09 , 3.07\r\nend Coordinates 334= -10 , -3\r\nend Coordinates 335= 0 , 0\r\nend Coordinates 336= 0 , 0\r\nend Coordinates 337= 10 , 10\r\nend Coordinates 338= 0.267 , 0.1565\r\nend Coordinates 339= 1.70,  , f(x,y) \r\nend Coordinates 340= 2.09 , 3.07\r\nend Coordinates 341= -10 , -3\r\nend Coordinates 342= 0 , 0\r\nend Coordinates 343= 0 , 0\r\nend Coordinates 344= 10 , 10\r\nend Coordinates 345= 0.267 , 0.1565\r\nend Coordinates 346= 1.70,  , f(x,y) \r\nend Coordinates 347= 2.09 , 3.07\r\nend Coordinates 348= -10 , -3\r\nend Coordinates 349= 0 , 0\r\nend Coordinates 350= 0 , 0\r\nend Coordinates 351= 10 , 10\r\nend Coordinates 352= 0.267 , 0.1565\r\nend Coordinates 353= 1.70,  , f(x,y) \r\nend Coordinates 354= 2.09 , 3.07\r\nend Coordinates 355= -10 , -3\r\nend Coordinates 356= 0 , 0\r\nend Coordinates 357= 0 , 0\r\nend Coordinates 358= 10 , 10\r\nend Coordinates 359= 0.267 , 0.1565\r\nend Coordinates 360= 1.70,  , f(x,y) \r\nend Coordinates 361= 2.09 , 3.07\r\nend Coordinates 362= -10 , -3\r\nend Coordinates 363= 0 , 0\r\nend Coordinates 364= 0 , 0\r\nend Coordinates 365= 10 , 10\r\nend Coordinates 366= 0.267 , 0.1565\r\nend Coordinates 367= 1.70,  , f(x,y) \r\nend Coordinates 368= 2.09 , 3.07\r\nend Coordinates 369= -10 , -3\r\nend Coordinates 370= 0 , 0\r\nend Coordinates 371= 0 , 0\r\nend Coordinates 372= 10 , 10\r\nend Coordinates 373= 0.267 , 0.1565\r\nend Coordinates 374= 1.70,  , f(x,y) \r\nend Coordinates 375= 2.09 , 3.07\r\nend Coordinates 376= -10 , -3\r\nend Coordinates 377= 0 , 0\r\nend Coordinates 378= 0 , 0\r\nend Coordinates 379= 10 , 10\r\nend Coordinates 380= 0.267 , 0.1565\r\nend Coordinates 381= 1.70,  , f(x,y) \r\nend Coordinates 382= 2.09 , 3.07\r\nend Coordinates 383= -10 , -3\r\nend Coordinates 384= 0 , 0\r\nend Coordinates 385= 0 , 0\r\nend Coordinates 386= 10 , 10\r\nend Coordinates 387= 0.267 , 0.1565\r\nend Coordinates 388= 1.70,  , f(x,y) \r\nend Coordinates 389= 2.09 , 3.07\r\nend Coordinates 390= -10 , -3\r\nend Coordinates 391= 0 , 0\r\nend Coordinates 392= 0 , 0\r\nend Coordinates 393= 10 , 10\r\nend Coordinates 394= 0.267 , 0.1565\r\nend Coordinates 395= 1.70,  , f(x,y) \r\nend Coordinates 396= 2.09 , 3.07\r\nend Coordinates 397= -10 , -3\r\nend Coordinates 398= 0 , 0\r\nend Coordinates 399= 0 , 0\r\nend Coordinates 400= 10 , 10\r\nend Coordinates 401= 0.267 , 0.1565\r\nend Coordinates 402= 1.70,  , f(x,y) \r\nend Coordinates 403= 2.09 , 3.07\r\nend Coordinates 404= -10 , -3\r\nend Coordinates 405= 0 , 0\r\nend Coordinates 406= 0 , 0\r\nend Coordinates 407= 10 , 10\r\nend Coordinates 408= 0.267 , 0.1565\r\nend Coordinates 409= 1.70,  , f(x,y) \r\nend Coordinates 410= 2.09 , 3.07\r\nend Coordinates 411= -10 , -3\r\nend Coordinates 412= 0 , 0\r\nend Coordinates 413= 0 , 0\r\nend Coordinates 414= 10 , 10\r\nend Coordinates 415= 0.267 , 0.1565\r\nend Coordinates 416= 1.70,  , f(x,y) \r\nend Coordinates 417= 2.09 , 3.07\r\nend Coordinates 418= -10 , -3\r\nend Coordinates 419= 0 , 0\r\nend Coordinates 420= 0 , 0\r\nend Coordinates 421= 10 , 10\r\nend Coordinates 422= 0.267 , 0.1565\r\nend Coordinates 423= 1.70,  , f(x,y) \r\nend Coordinates 424= 2.09 , 3.07\r\nend Coordinates 425= -10 , -3\r\nend Coordinates 426= 0 , 0\r\nend Coordinates 427= 0 , 0\r\nend Coordinates 428= 10 , 10\r\nend Coordinates 429= 0.267 , 0.1565\r\nend Coordinates 430= 1.70,  , f(x,y) \r\nend Coordinates 431= 2.09 , 3.07\r\nend Coordinates 432= -10 , -3\r\nend Coordinates 433= 0 , 0\r\nend Coordinates 434= 0 , 0\r\nend Coordinates 435= 10 , 10\r\nend Coordinates 436= 0.267 , 0.1565\r\nend Coordinates 437= 1.70,  , f(x,y) \r\nend Coordinates 438= 2.09 , 3.07\r\nend Coordinates 439= -10 , -3\r\nend Coordinates 440= 0 , 0\r\nend Coordinates 441= 0 , 0\r\nend Coordinates 442= 10 , 10\r\nend Coordinates 443= 0.267 , 0.1565\r\nend Coordinates 444= 1.70,  , f(x,y) \r\nend Coordinates 445= 2.09 , 3.07\r\nend Coordinates 446= -10 , -3\r\nend Coordinates 447= 0 , 0\r\nend Coordinates 448= 0 , 0\r\nend Coordinates 449= 10 , 10\r\nend Coordinates 450= 0.267 , 0.1565\r\nend Coordinates 451= 1.70,  , f(x,y) \r\nend Coordinates 452= 2.09 , 3.07\r\nend Coordinates 453= -10 , -3\r\nend Coordinates 454= 0 , 0\r\nend Coordinates 455= 0 , 0\r\nend Coordinates 456= 10 , 10\r\nend Coordinates 457= 0.267 , 0.1565\r\nend Coordinates 458= 1.70,  , f(x,y) \r\nend Coordinates 459= 2.09 , 3.07\r\nend Coordinates 460= -10 , -3\r\nend Coordinates 461= 0 , 0\r\nend Coordinates 462= 0 , 0\r\nend Coordinates 463= 10 , 10\r\nend Coordinates 464= 0.267 , 0.1565\r\nend Coordinates 465= 1.70,  , f(x,y) \r\nend Coordinates 466= 2.09 , 3.07\r\nend Coordinates 467= -10 , -3\r\nend Coordinates 468= 0 , 0\r\nend Coordinates 469= 0 , 0\r\nend Coordinates 470= 10 , 10\r\nend Coordinates 471= 0.267 , 0.1565\r\nend Coordinates 472= 1.70,  , f(x,y) \r\nend Coordinates 473= 2.09 , 3.07\r\nend Coordinates 474= -10 , -3\r\nend Coordinates 475= 0 , 0\r\nend Coordinates 476= 0 , 0\r\nend Coordinates 477= 10 , 10\r\nend Coordinates 478= 0.267 , 0.1565\r\nend Coordinates 479= 1.70,  , f(x,y) \r\nend Coordinates 480= 2.09 , 3.07\r\nend Coordinates 481= -10 , -3\r\nend Coordinates 482= 0 , 0\r\nend Coordinates 483= 0 , 0\r\nend Coordinates 484= 10 , 10\r\nend Coordinates 485= 0.267 , 0.1565\r\nend Coordinates 486= 1.70,  , f(x,y) \r\nend Coordinates 487= 2.09 , 3.07\r\nend Coordinates 488= -10 , -3\r\nend Coordinates 489= 0 , 0\r\nend Coordinates 490= 0 , 0\r\nend Coordinates 491= 10 , 10\r\nend Coordinates 492= 0.267 , 0.1565\r\nend Coordinates 493= 1.70,  , f(x,y) \r\nend Coordinates 494= 2.09 , 3.07\r\nend Coordinates 495= -10 , -3\r\nend Coordinates 496= 0 , 0\r\nend Coordinates 497= 0 , 0\r\nend Coordinates 498= 10 , 10\r\nend Coordinates 499= 0.267 , 0.1565\r\nend Coordinates 500= 1.70,  , f(x,y) \r\nend Coordinates 501= 2.09 , 3.07\r\nend Coordinates 502= -10 , -3\r\nend Coordinates 503= 0 , 0\r\nend Coordinates 504= 0 , 0\r\nend Coordinates 505= 10 , 10\r\nend Coordinates 506= 0.267 , 0.1565\r\nend Coordinates 507= 1.70,  , f(x,y) \r\nend Coordinates 508= 2.09 , 3.07\r\nend Coordinates 509= -10 , -3\r\nend Coordinates 510= 0 , 0\r\nend Coordinates 511= 0 , 0\r\nend Coordinates 512= 10 , 10\r\nend Coordinates 513= 0.267 , 0.1565\r\nend Coordinates 514= 1.70,  , f(x,y) \r\nend Coordinates 515= 2.09 , 3.07\r\nend Coordinates 516= -10 , -3\r\nend Coordinates 517= 0 , 0\r\nend Coordinates 518= 0 , 0\r\nend Coordinates 519= 10 , 10\r\nend Coordinates 520= 0.267 , 0.1565\r\nend Coordinates 521= 1.70,  , f(x,y) \r\nend Coordinates 522= 2.09 , 3.07\r\nend Coordinates 523= -10 , -3\r\nend Coordinates 524= 0 , 0\r\nend Coordinates 525= 0 , 0\r\nend Coordinates 526= 10 , 10\r\nend Coordinates 527= 0.267 , 0.1565\r\nend Coordinates 528= 1.70,  , f(x,y) \r\nend Coordinates 529= 2.09 , 3.07\r\nend Coordinates 530= -10 , -3\r\nend Coordinates 531= 0 , 0\r\nend Coordinates 532= 0 , 0\r\nend Coordinates 533= 10 , 10\r\nend Coordinates 534= 0.267 , 0.1565\r\nend Coordinates 535= 1.70,  , f(x,y) \r\nend Coordinates 536= 2.09 , 3.07\r\nend Coordinates 537= -10 , -3\r\nend Coordinates 538= 0 , 0\r\nend Coordinates 539= 0 , 0\r\nend Coordinates 540= 10 , 10\r\nend Coordinates 541= 0.267 , 0.1565\r\nend Coordinates 542= 1.70,  , f(x,y) \r\nend Coordinates 543= 2.09 , 3.07\r\nend Coordinates 544= -10 , -3\r\nend Coordinates 545= 0 , 0\r\nend Coordinates 546= 0 , 0\r\nend Coordinates 547= 10 , 10\r\nend Coordinates 548= 0.267 , 0.1565\r\nend Coordinates 549= 1.70,  , f(x,y) \r\nend Coordinates 550= 2.09 , 3.07\r\nend Coordinates 551= -10 , -3\r\nend Coordinates 552= 0 , 0\r\nend Coordinates 553= 0 , 0\r\nend Coordinates 554= 10 , 10\r\nend Coordinates 555= 0.267 , 0.1565\r\nend Coordinates 556= 1.70,  , f(x,y) \r\nend Coordinates 557= 2.09 , 3.07\r\nend Coordinates 558= -10 , -3\r\nend Coordinates 559= 0 , 0\r\nend Coordinates 560= 0 , 0\r\nend Coordinates 561= 10 , 10\r\nend Coordinates 562= 0.267 , 0.1565\r\nend Coordinates 563= 1.70,  , f(x,y) \r\nend Coordinates 564= 2.09 , 3.07\r\nend Coordinates 565= -10 , -3\r\nend Coordinates 566= 0 , 0\r\nend Coordinates 567= 0 , 0\r\nend Coordinates 568= 10 , 10\r\nend Coordinates 569= 0.267 , 0.1565\r\nend Coordinates 570= 1.70,  , f(x,y) \r\nend Coordinates 571= 2.09 , 3.07\r\nend Coordinates 572= -10 , -3\r\nend Coordinates 573= 0 , 0\r\nend Coordinates 574= 0 , 0\r\nend Coordinates 575= 10 , 10\r\nend Coordinates 576= 0.267 , 0.1565\r\nend Coordinates 577= 1.70,  , f(x,y) \r\nend Coordinates 578= 2.09 , 3.07\r\nend Coordinates 579= -10 , -3\r\nend Coordinates 580= 0 , 0\r\nend Coordinates 581= 0 , 0\r\nend Coordinates 582= 10 , 10\r\nend Coordinates 583= 0.267 , 0.1565\r\nend Coordinates 584= 1.70,  , f(x,y) \r\nend Coordinates 585= 2.09 , 3.07\r\nend Coordinates 586= -10 , -3\r\nend Coordinates 587= 0 , 0\r\nend Coordinates 588= 0 , 0\r\nend Coordinates 589= 10 , 10\r\nend Coordinates 590= 0.267 , 0.1565\r\nend Coordinates 591= 1.70,  , f(x,y) \r\nend Coordinates 592= 2.09 , 3.07\r\nend Coordinates 593= -10 , -3\r\nend Coordinates 594= 0 , 0\r\nend Coordinates 595= 0 , 0\r\nend Coordinates 596= 10 , 10\r\nend Coordinates 597= 0.267 , 0.1565\r\nend Coordinates 598= 1.70,  , f(x,y) \r\nend Coordinates 599= 2.09 , 3.07\r\nend Coordinates 600= -10 , -3\r\nend Coordinates 601= 0 , 0\r\nend Coordinates 602= 0 , 0\r\nend Coordinates 603= 10 , 10\r\nend Coordinates 604= 0.267 , 0.1565\r\nend Coordinates 605= 1.70,  , f(x,y) \r\nend Coordinates 606= 2.09 , 3.07\r\nend Coordinates 607= -10 , -3\r\nend Coordinates 608= 0 , 0\r\nend Coordinates 609= 0 , 0\r\nend Coordinates 610= 10 , 10\r\nend Coordinates 611= 0.267 , 0.1565\r\nend Coordinates 612= 1.70,  , f(x,y) \r\nend Coordinates 613= 2.09 , 3.07\r\nend Coordinates 614= -10 , -3\r\nend Coordinates 615= 0 , 0\r\nend Coordinates 616= 0 , 0\r\nend Coordinates 617= 10 , 10\r\nend Coordinates 618= 0.267 , 0.1565\r\nend Coordinates 619= 1.70,  , f(x,y) \r\nend Coordinates 620= 2.09 , 3.07\r\nend Coordinates 621= -10 , -3\r\nend Coordinates 622= 0 , 0\r\nend Coordinates 623= 0 , 0\r\nend Coordinates 624= 10 , 10\r\nend Coordinates 625= 0.267 , 0.1565\r\nend Coordinates 626= 1.70,  , f(x,y) \r\nend Coordinates 627= 2.09 , 3.07\r\nend Coordinates 628= -10 , -3\r\nend Coordinates 629= 0 , 0\r\nend Coordinates 630= 0 , 0\r\nend Coordinates 631= 10 , 10\r\nend Coordinates 632= 0.267 , 0.1565\r\nend Coordinates 633= 1.70,  , f(x,y) \r\nend Coordinates 634= 2.09 , 3.07\r\nend Coordinates 635= -10 , -3\r\nend Coordinates 636= 0 , 0\r\nend Coordinates 637= 0 , 0\r\nend Coordinates 638= 10 , 10\r\nend Coordinates 639= 0.267 , 0.1565\r\nend Coordinates 640= 1.70,  , f(x,y) \r\nend Coordinates 641= 2.09 , 3.07\r\nend Coordinates 642= -10 , -3\r\nend Coordinates 643= 0 , 0\r\nend Coordinates 644= 0 , 0\r\nend Coordinates 645= 10 , 10\r\nend Coordinates 646= 0.267 , 0.1565\r\nend Coordinates 647= 1.70,  , f(x,y) \r\nend Coordinates 648= 2.09 , 3.07\r\nend Coordinates 649= -10 , -3\r\nend Coordinates 650= 0 , 0\r\nend Coordinates 651= 0 , 0\r\nend Coordinates 652= 10 , 10\r\nend Coordinates 653= 0.267 , 0.1565\r\nend Coordinates 654= 1.70,  , f(x,y) \r\nend Coordinates 655= 2.09 , 3.07\r\nend Coordinates 656= -10 , -3\r\nend Coordinates 657= 0 , 0\r\nend Coordinates 658= 0 , 0\r\nend Coordinates 659= 10 , 10\r\nend Coordinates 660= 0.267 , 0.1565\r\nend Coordinates 661= 1.70,  , f(x,y) \r\nend Coordinates 662= 2.09 , 3.07\r\nend Coordinates 663= -10 , -3\r\nend Coordinates 664= 0 , 0\r\nend Coordinates 665= 0 , 0\r\nend Coordinates 666= 10 , 10\r\nend Coordinates 667= 0.267 , 0.1565\r\nend Coordinates 668= 1.70,  , f(x,y) \r\nend Coordinates 669= 2.09 , 3.07\r\nend Coordinates 670= -10 , -3\r\nend Coordinates 671= 0 , 0\r\nend Coordinates 672= 0 , 0\r\nend Coordinates 673= 10 , 10\r\nend Coordinates 674= 0.267 , 0.1565\r\nend Coordinates 675= 1.70,  , f(x,y) \r\nend Coordinates 676= 2.09 , 3.07\r\nend Coordinates 677= -10 , -3\r\nend Coordinates 678= 0 , 0\r\nend Coordinates 679= 0 , 0\r\nend Coordinates 680= 10 , 10\r\nend Coordinates 681= 0.267 , 0.1565\r\nend Coordinates 682= 1.70,  , f(x,y) \r\nend Coordinates 683= 2.09 , 3.07\r\nend Coordinates 684= -10 , -3\r\nend Coordinates 685= 0 , 0\r\nend Coordinates 686= 0 , 0\r\nend Coordinates 687= 10 , 10\r\nend Coordinates 688= 0.267 , 0.1565\r\nend Coordinates 689= 1.70,  , f(x,y) \r\nend Coordinates 690= 2.09 , 3.07\r\nend Coordinates 691= -10 , -3\r\nend Coordinates 692= 0 , 0\r\nend Coordinates 693= 0 , 0\r\nend Coordinates 694= 10 , 10\r\nend Coordinates 695= 0.267 , 0.1565\r\nend Coordinates 696= 1.70,  , f(x,y) \r\nend Coordinates 697= 2.09 , 3.07\r\nend Coordinates 698= -10 , -3\r\nend Coordinates 699= 0 , 0\r\nend Coordinates 700= 0 , 0\r\nend Coordinates 701= 10 , 10\r\nend Coordinates 702= 0.267 , 0.1565\r\nend Coordinates 703= 1.70,  , f(x,y) \r\nend Coordinates 704= 2.09 , 3.07\r\nend Coordinates 705= -10 , -3\r\nend Coordinates 706= 0 , 0\r\nend Coordinates 707= 0 , 0\r\nend Coordinates 708= 10 , 10\r\nend Coordinates 709= 0.267 , 0.1565\r\nend Coordinates 710= 1.70,  , f(x,y) \r\nend Coordinates 711= 2.09 , 3.07\r\nend Coordinates 712= -10 , -3\r\nend Coordinates 713= 0 , 0\r\nend Coordinates 714= 0 , 0\r\nend Coordinates 715= 10 , 10\r\nend Coordinates 716= 0.267 , 0.1565\r\nend Coordinates 717= 1.70,  , f(x,y) \r\nend Coordinates 718= 2.09 , 3.07\r\nend Coordinates 719= -10 , -3\r\nend Coordinates 720= 0 , 0\r\nend Coordinates 721= 0 , 0\r\nend Coordinates 722= 10 , 10\r\nend Coordinates 723= 0.267 , 0.1565\r\nend Coordinates 724= 1.70,  , f(x,y) \r\nend Coordinates 725= 2.09 , 3.07\r\nend Coordinates 726= -10 , -3\r\nend Coordinates 727= 0 , 0\r\nend Coordinates 728= 0 , 0\r\nend Coordinates 729= 10 , 10\r\nend Coordinates 730= 0.267 , 0.1565\r\nend Coordinates 731= 1.70,  , f(x,y) \r\nend Coordinates 732= 2.09 , 3.07\r\nend Coordinates 733= -10 , -3\r\nend Coordinates 734= 0 , 0\r\nend Coordinates 735= 0 , 0\r\nend Coordinates 736= 10 , 10\r\nend Coordinates 737= 0.267 , 0.1565\r\nend Coordinates 738= 1.70,  , f(x,y) \r\nend Coordinates 739= 2.09 , 3.07\r\nend Coordinates 740= -10 , -3\r\nend Coordinates 741= 0 , 0\r\nend Coordinates 742= 0 , 0\r\nend Coordinates 743= 10 , 10\r\nend Coordinates 744= 0.267 , 0.1565\r\nend Coordinates 745= 1.70,  , f(x,y) \r\nend Coordinates 746= 2.09 , 3.07\r\nend Coordinates 747= -10 , -3\r\nend Coordinates 748= 0 , 0\r\nend Coordinates 749= 0 , 0\r\nend Coordinates 750= 10 , 10\r\nend Coordinates 751= 0.267 , 0.1565\r\nend Coordinates 752= 1.70,  , f(x,y) \r\nend Coordinates 753= 2.09 , 3.07\r\nend Coordinates 754= -10 , -3\r\nend Coordinates 755= 0 , 0\r\nend Coordinates 756= 0 , 0\r\nend Coordinates 757= 10 , 10\r\nend Coordinates 758= 0.267 , 0.1565\r\nend Coordinates 759= 1.70,  , f(x,y) \r\nend Coordinates 760= 2.09 , 3.07\r\nend Coordinates 761= -10 , -3\r\nend Coordinates 762= 0 , 0\r\nend Coordinates 763= 0 , 0\r\nend Coordinates 764= 10 , 10\r\nend Coordinates 765= 0.267 , 0.1565\r\nend Coordinates 766= 1.70,  , f(x,y) \r\nend Coordinates 767= 2.09 , 3.07\r\nend Coordinates 768= -10 , -3\r\nend Coordinates 769= 0 , 0\r\nend Coordinates 770= 0 , 0\r\nend Coordinates 771= 10 , 10\r\nend Coordinates 772= 0.267 , 0.1565\r\nend Coordinates 773= 1.70,  , f(x,y) \r\nend Coordinates 774= 2.09 , 3.07\r\nend Coordinates 775= -10 , -3\r\nend Coordinates 776= 0 , 0\r\nend Coordinates 777= 0 , 0\r\nend Coordinates 778= 10 , 10\r\nend Coordinates 779= 0.267 , 0.1565\r\nend Coordinates 780= 1.70,  , f(x,y) \r\nend Coordinates 781= 2.09 , 3.07\r\nend Coordinates 782= -10 , -3\r\nend Coordinates 783= 0 , 0\r\nend Coordinates 784= 0 , 0\r\nend Coordinates 785= 10 , 10\r\nend Coordinates 786= 0.267 , 0.1565\r\nend Coordinates 787= 1.70,  , f(x,y) \r\nend Coordinates 788= 2.09 , 3.07\r\nend Coordinates 789= -10 , -3\r\nend Coordinates 790= 0 , 0\r\nend Coordinates 791= 0 , 0\r\nend Coordinates 792= 10 , 10\r\nend Coordinates 793= 0.267 , 0.1565\r\nend Coordinates 794= 1.70,  , f(x,y) \r\nend Coordinates 795= 2.09 , 3.07\r\nend Coordinates 796= -10 , -3\r\nend Coordinates 797= 0 , 0\r\nend Coordinates 798= 0 , 0\r\nend Coordinates 799= 10 , 10\r\nend Coordinates 800= 0.267 , 0.1565\r\nend Coordinates 801= 1.70,  , f(x,y) \r\nend Coordinates 802= 2.09 , 3.07\r\nend Coordinates 803= -10 , -3\r\nend Coordinates 804= 0 , 0\r\nend Coordinates 805= 0 , 0\r\nend Coordinates 806= 10 , 10\r\nend Coordinates 807= 0.267 , 0.1565\r\nend Coordinates 808= 1.70,  , f(x,y) \r\nend Coordinates 809= 2.09 , 3.07\r\nend Coordinates 810= -10 , -3\r\nend Coordinates 811= 0 , 0\r\nend Coordinates 812= 0 , 0\r\nend Coordinates 813= 10 , 10\r\nend Coordinates 814= 0.267 , 0.1565\r\nend Coordinates 815= 1.70,  , f(x,y) \r\nend Coordinates 816= 2.09 , 3.07\r\nend Coordinates 817= -10 , -3\r\nend Coordinates 818= 0 , 0\r\nend Coordinates 819= 0 , 0\r\nend Coordinates 820= 10 , 10\r\nend Coordinates 821= 0.267 , 0.1565\r\nend Coordinates 822= 1.70,  , f(x,y) \r\nend Coordinates 823= 2.09 , 3.07\r\nend Coordinates 824= -10 , -3\r\nend Coordinates 825= 0 , 0\r\nend Coordinates 826= 0 , 0\r\nend Coordinates 827= 10 , 10\r\nend Coordinates 828= 0.267 , 0.1565\r\nend Coordinates 829= 1.70,  , f(x,y) \r\nend Coordinates 830= 2.09 , 3.07\r\nend Coordinates 831= -10 , -3\r\nend Coordinates 832= 0 , 0\r\nend Coordinates 833= 0 , 0\r\nend Coordinates 834= 10 , 10\r\nend Coordinates 835= 0.267 , 0.1565\r\nend Coordinates 836= 1.70,  , f(x,y) \r\nend Coordinates 837= 2.09 , 3.07\r\nend Coordinates 838= -10 , -3\r\nend Coordinates 839= 0 , 0\r\nend Coordinates 840= 0 , 0\r\nend Coordinates 841= 10 , 10\r\nend Coordinates 842= 0.267 , 0.1565\r\nend Coordinates 843= 1.70,  , f(x,y) \r\nend Coordinates 844= 2.09 , 3.07\r\nend Coordinates 845= -10 , -3\r\nend Coordinates 846= 0 , 0\r\nend Coordinates 847= 0 , 0\r\nend Coordinates 848= 10 , 10\r\nend Coordinates 849= 0.267 , 0.1565\r\nend Coordinates 850= 1.70,  , f(x,y) \r\nend Coordinates 851= 2.09 , 3.07\r\nend Coordinates 852= -10 , -3\r\nend Coordinates 853= 0 , 0\r\nend Coordinates 854= 0 , 0\r\nend Coordinates 855= 10 , 10\r\nend Coordinates 856= 0.267 , 0.1565\r\nend Coordinates 857= 1.70,  , f(x,y) \r\nend Coordinates 858= 2.09 , 3.07\r\nend Coordinates 859= -10 , -3\r\nend Coordinates 860= 0 , 0\r\nend Coordinates 861= 0 , 0\r\nend Coordinates 862= 10 , 10\r\nend Coordinates 863= 0.267 , 0.1565\r\nend Coordinates 864= 1.70,  , f(x,y) \r\nend Coordinates 865= 2.09 , 3.07\r\nend Coordinates 866= -10 , -3\r\nend Coordinates 867= 0 , 0\r\nend Coordinates 868= 0 , 0\r\nend Coordinates 869= 10 , 10\r\nend Coordinates 870= 0.267 , 0.1565\r\nend Coordinates 871= 1.70,  , f(x,y) \r\nend Coordinates 872= 2.09 , 3.07\r\nend Coordinates 873= -10 , -3\r\nend Coordinates 874= 0 , 0\r\nend Coordinates 875= 0 , 0\r\nend Coordinates 876= 10 , 10\r\nend Coordinates 877= 0.267 , 0.1565\r\nend Coordinates 878= 1.70,  , f(x,y) \r\nend Coordinates 879= 2.09 , 3.07\r\nend Coordinates 880= -10 , -3\r\nend Coordinates 881= 0 , 0\r\nend Coordinates 882= 0 , 0\r\nend Coordinates 883= 10 , 10\r\nend Coordinates 884= 0.267 , 0.1565\r\nend Coordinates 885= 1.70,  , f(x,y) \r\nend Coordinates 886= 2.09 , 3.07\r\nend Coordinates 887= -10 , -3\r\nend Coordinates 888= 0 , 0\r\nend Coordinates 889= 0 , 0\r\nend Coordinates 890= 10 , 10\r\nend Coordinates 891= 0.267 , 0.1565\r\nend Coordinates 892= 1.70,  , f(x,y) \r\nend Coordinates 893= 2.09 , 3.07\r\nend Coordinates 894= -10 , -3\r\nend Coordinates 895= 0 , 0\r\nend Coordinates 896= 0 , 0\r\nend Coordinates 897= 10 , 10\r\nend Coordinates 898= 0.267 , 0.1565\r\nend Coordinates 899= 1.70,  , f(x,y) \r\nend Coordinates 900= 2.09 , 3.07\r\nend Coordinates 901= -10 , -3\r\nend Coordinates 902= 0 , 0\r\nend Coordinates 903= 0 , 0\r\nend Coordinates 904= 10 , 10\r\nend Coordinates 905= 0.267 , 0.1565\r\nend Coordinates 906= 1.70,  , f(x,y) \r\nend Coordinates 907= 2.09 , 3.07\r\nend Coordinates 908= -10 , -3\r\nend Coordinates 909= 0 , 0\r\nend Coordinates 910= 0 , 0\r\nend Coordinates 911= 10 , 10\r\nend Coordinates 912= 0.267 , 0.1565\r\nend Coordinates 913= 1.70,  , f(x,y) \r\nend Coordinates 914= 2.09 , 3.07\r\nend Coordinates 915= -10 , -3\r\nend Coordinates 916= 0 , 0\r\nend Coordinates 917= 0 , 0\r\nend Coordinates 918= 10 , 10\r\nend Coordinates 919= 0.267 , 0.1565\r\nend Coordinates 920= 1.70,  , f(x,y) \r\nend Coordinates 921= 2.09 , 3.07\r\nend Coordinates 922= -10 , -3\r\nend Coordinates 923= 0 , 0\r\nend Coordinates 924= 0 , 0\r\nend Coordinates 925= 10 , 10\r\nend Coordinates 926= 0.267 , 0.1565\r\nend Coordinates 927= 1.70,  , f(x,y) \r\nend Coordinates 928= 2.09 , 3.07\r\nend Coordinates 929= -10 , -3\r\nend Coordinates 930= 0 , 0\r\nend Coordinates 931= 0 , 0\r\nend Coordinates 932= 10 , 10\r\nend Coordinates 933= 0.267 , 0.1565\r\nend Coordinates 934= 1.70,  , f(x,y) \r\nend Coordinates 935= 2.09 , 3.07\r\nend Coordinates 936= -10 , -3\r\nend Coordinates 937= 0 , 0\r\nend Coordinates 938= 0 , 0\r\nend Coordinates 939= 10 , 10\r\nend Coordinates 940= 0.267 , 0.1565\r\nend Coordinates 941= 1.70,  , f(x,y) \r\nend Coordinates 942= 2.09 , 3.07\r\nend Coordinates 943= -10 , -3\r\nend Coordinates 944= 0 , 0\r\nend Coordinates 945= 0 , 0\r\nend Coordinates 946= 10 , 10\r\nend Coordinates 947= 0.267 , 0.1565\r\nend Coordinates 948= 1.70,  , f(x,y) \r\nend Coordinates 949= 2.09 , 3.07\r\nend Coordinates 950= -10 , -3\r\nend Coordinates 951= 0 , 0\r\nend Coordinates 952= 0 , 0\r\nend Coordinates 953= 10 , 10\r\nend Coordinates 954= 0.267 , 0.1565\r\nend Coordinates 955= 1.0,  , f(x,y) \r\nend Coordinates 956= 2.09 , 3.07\r\nend Coordinates 957= -10 , -3\r\nend Coordinates 958= 0 , 0\r\nend Coordinates 959= 0 , 0\r\nend Coordinates 960= 10 , 10\r\nend Coordinates 961= 0.267 , 0.1565\r\nend Coordinates 962= 1.0,  , f(x,y) \r\nend Coordinates 963= 2.09 , 3.07\r\nend Coordinates 964= -10 , -3\r\nend Coordinates 965= 0 , 0\r\nend Coordinates 966= 0 , 0\r\nend Coordinates 967= 10 , 10\r\nend Coordinates 968= 0.267 , 0.1565\r\nend Coordinates 969= 1.0,  , f(x,y) \r\nend Coordinates 970= 2.09 , 3.07\r\nend Coordinates 971= -10 , -3\r\nend Coordinates 972= 0 , 0\r\nend Coordinates 973= 0 , 0\r\nend Coordinates 974= 10 , 10\r\nend Coordinates 975= 0.267 , 0.1565\r\nend Coordinates 976= 1.0,  , f(x,y) \r\nend Coordinates 977= 2.09 , 3.07\r\nend Coordinates 978= -10 , -3\r\nend Coordinates 979= 0 , 0\r\nend Coordinates 980= 0 , 0\r\nend Coordinates 981= 10 , 10\r\nend Coordinates 982= 0.267 , 0.1565\r\nend Coordinates 983= 1.0,  , f(x,y) \r\nend Coordinates 984= 2.09 , 3.07\r\nend Coordinates 985= -10 , -3\r\nend Coordinates 986= 0 , 0\r\nend Coordinates 987= 0 , 0\r\nend Coordinates 988= 10 , 10\r\nend Coordinates 989= 0.267 , 0.1565\r\nend Coordinates 990= 1.0,  , f(x,y) \r\nend Coordinates 991= 2.09 , 3.07\r\nend Coordinates 992= -10 , -3\r\nend Coordinates 993= 0 , 0\r\nend Coordinates 994= 0 , 0\r\nend Coordinates 995= 10 , 10\r\nend Coordinates 996= 0.267 , 0.1565\r\nend Coordinates 997= 1.0,  , f(x,y) \r\nend Coordinates 998= 2.09 , 3.07\r\nend Coordinates 999= -10 , -3\r\nend Coordinates 1000= 0 , 0\r\nend Coordinates 1001= 0 , 0\r\nend Coordinates 1002= 10 , 10\r\nend Coordinates 1003= 0.267 , 0.1565\r\nend Coordinates 1004= 1.0,  , f(x,y) \r\nend Coordinates 1005= 2.09 , 3.07\r\nend Coordinates 1006= -10 , -3\r\nend Coordinates 1007= 0 , 0\r\nend Coordinates 1008= 0 , 0\r\nend Coordinates 1009= 10 , 10\r\nend Coordinates 1010= 0.267 , 0.1565\r\nend Coordinates 1011= 1.0,  , f(x,y) \r\nend Coordinates 1012= 2.09 , 3.07\r\nend Coordinates 1013= -10 , -3\r\nend Coordinates 1014= 0 , 0\r\nend Coordinates 1015= 0 , 0\r\nend Coordinates 1016= 10 , 10\r\nend Coordinates 1017= 0.267 , 0.1565\r\nend Coordinates 1018= 1.0,  , f(x,y) \r\nend Coordinates 1019= 2.09 , 3.07\r\nend Coordinates 1020= -10 , -3\r\nend Coordinates 1021= 0 , 0\r\nend Coordinates 1022= 0 , 0\r\nend Coordinates 1023= 10 , 10\r\nend Coordinates 1024= 0.267 , 0.1565\r\nend Coordinates 1025= 1.0,  , f(x,y) \r\nend Coordinates 1026= 2.09 , 3.07\r\nend Coordinates 1027= -10 , -3\r\nend Coordinates 1028= 0 , 0\r\nend Coordinates 1029= 0 , 0\r\nend Coordinates 1030= 0 , 0\r\nend Coordinates 1031= 0.1 , 0.05\r\nend Coordinates 1032= 1.0,  , f(x,y) \r\nend Coordinates 1033= 2.0 , 0.0\r\nend Coordinates 1034= -10 , -3\r\nend Coordinates 1035= 0 , 0\r\nend Coordinates 1036= 0 , 0\r\nend Coordinates 1037= 0 , 0\r\nend Coordinates 1038= 0.1 , 0.05\r\nend Coordinates 1039= 1.0,  , f(x,y) \r\nend Coordinates 1040= 2.0 , 0.0\r\nend Coordinates 1041= 0 , 0\r\nend Coordinates 1042= 0.1 , 0.05\r\nend Coordinates 1043= 1.0,  , f(x,y) \r\nend Coordinates 1044= 2.0 , 0.0\r\nend Coordinates 1045= 0 , 0\r\nend Coordinates 1046= 0.1 , 0.05\r\nend Coordinates 1047= 1.0,  , f(x,y) \r\nend Coordinates 1048= 2.0 , 0.0\r\nend Coordinates 1049= 0 , 0\r\nend Coordinates 1050= 0.1 , 0.05\r\nend Coordinates 1051= 1.0,  , f(x,y) \r\nend Coordinates 1052= 2.0 , 0.0\r\nend Coordinates 1053= 0 , 0\r\nend Coordinates 1054= 0.1 , 0.05\r\nend Coordinates 1055= 1.0,  , f(x,y) \r\nend Coordinates 1056= 2.0 , 0.0\r\nend Coordinates 1057= 0 , 0\r\nend Coordinates 1058= 0.1 , 0.05\r\nend Coordinates 1059= 1.0,  , f(x,y) \r\nend Coordinates 1060= 2.0 , 0.0\r\nend Coordinates 1061= 0 , 0\r\nend Coordinates 1062= 0.1 , 0.05\r\nend Coordinates 1063= 1.0,  , f(x,y) \r\nend Coordinates 1064= 2.0 , 0.0\r\nend Coordinates 1065= 0 , 0\r\nend Coordinates 1066= 0.1 , 0.05\r\nend Coordinates 1067= 1.0,  , f(x,y) \r\nend Coordinates 1068= 2.0 , 0.0\r\nend Coordinates 1069= 0 , 0\r\nend Coordinates 1070= 0.1 , 0.05\r\nend Coordinates 1071= 1.0,  , f(x,y) \r\nend Coordinates 1072= 2.0 , 0.0\r\nend Coordinates 1073= 0 , 0\r\nend Coordinates 1074= 0.1 , 0.05\r\nend Coordinates 1075= 1.0,  , f(x,y) \r\nend Coordinates 1076= 2.0 , 0.0\r\nend Coordinates 1077= 0 , 0\r\nend Coordinates 1078= 0.1 , 0.05\r\nend Coordinates 1079= 1.0,  , f(x,y) \r\nend Coordinates 1080= 2.0 , 0.0\r\nend Coordinates 1081= 0 , 0\r\nend Coordinates 1082= 0.1 , 0.05\r\nend Coordinates 1083= 1.0,  , f(x,y) \r\nend Coordinates 1084= 2.0 , 0.0\r\nend Coordinates 1085= 0 , 0\r\nend Coordinates 1086= 0.1 , 0.05\r\nend Coordinates 1087= 1.0,  , f(x,y) \r\nend Coordinates 1088= 2.0 , 0.0\r\nend Coordinates 1089= 0 , 0\r\nend Coordinates 1090= 0.1 , 0.05\r\nend Coordinates 1091= 1.0,  , f(x,y) \r\nend Coordinates 1092= 2.0 , 0.0\r\nend Coordinates 1093= 0 , 0\r\nend Coordinates 1094= 0.1 , 0.05\r\nend Coordinates 1095= 1.0,  , f(x,y) \r\nend Coordinates 1096= 2.0 , 0.0\r\nend Coordinates 1097= 0 , 0\r\nend Coordinates 1098= 0.1 , 0.05\r\nend Coordinates 1099= 1.0,  , f(x,y) \r\nend Coordinates 1100= 2.0 , 0.0\r\nend Coordinates 1101= 0 , 0\r\nend Coordinates 1102= 0.1 , 0.05\r\nend Coordinates 1103= 1.0,  , f(x,y) \r\nend Coordinates 1104= 2.0 , 0.0\r\nend Coordinates 1105= 0 , 0\r\nend Coordinates 1106= 0.1 , 0.05\r\nend Coordinates 1107= 1.0,  , f(x,y) \r\nend Coordinates 1108= 2.0 , 0.0\r\nend Coordinates 1109= 0 , 0\r\nend Coordinates 1110= 0.1 , 0.05\r\nend Coordinates 1111= 1.0,  , f(x,y) \r\nend Coordinates 1112= 2.0 , 0.0\r\nend Coordinates 1113= 0 , 0\r\nend Coordinates 1114= 0.1 , 0.05\r\nend Coordinates 1115= 1.0,  , f(x,y) \r\nend Coordinates 1116= 2.0 , 0.0\r\nend Coordinates 1117= 0 , 0\r\nend Coordinates 1118= 0.1 , 0.05\r\nend Coordinates 1119= 1.0,  , f(x,y) \r\nend Coordinates 1120= 2.0 , 0.0\r\nend Coordinates 1121= 0 , 0\r\nend Coordinates 1122= 0.1 , 0.05\r\nend Coordinates 1123= 1.0,  , f(x,y) \r\nend Coordinates 1124= 2.0 , 0.0\r\nend Coordinates 1125= 0 , 0\r\nend Coordinates 1126= 0.1 , 0.05\r\nend Coordinates 1127= 1.0,  , f(x,y) \r\nend Coordinates 1128= 2.0 , 0.0\r\nend Coordinates 1129= 0 , 0\r\nend Coordinates 1130= 0.1 , 0.05\r\nend Coordinates 1131= 1.0,  , f(x,y) \r\nend Coordinates 1132= 2.0 , 0.0\r\nend Coordinates 1133= 0 , 0\r\nend Coordinates 1134= 0.1 , 0.05\r\nend Coordinates 1135= 1.0,  , f(x,y) \r\nend Coordinates 1136= 2.0 , 0.0\r\nend Coordinates 1137= 0 , 0\r\nend Coordinates 1138= 0.1 , 0.05\r\nend Coordinates 1139= 1.0,  , f(x,y) \r\nend Coordinates 1140= 2.0 , 0.0\r\nend Coordinates 1141= 0 , 0\r\nend Coordinates 1142= 0.1 , 0.05\r\nend Coordinates 1143= 1.0,  , f(x,y) \r\nend Coordinates 1144= 2.0 , 0.0\r\nend Coordinates 1145= 0 , 0\r\nend Coordinates 1146= 0.1 , 0.05\r\nend Coordinates 1147= 1.0,  , f(x,y) \r\nend Coordinates 1148= 2.0 , 0.0\r\nend Coordinates 1149= 0 , 0\r\nend Coordinates 1150= 0.1 , 0.05\r\nend Coordinates 1151= 1.0,  , f(x,y) \r\nend Coordinates 1152= 2.0 , 0.0\r\nend Coordinates 1153= 0 , 0\r\nend Coordinates 1154= 0.1 , 0.05\r\nend Coordinates 1155= 1.0,  , f(x,y) \r\nend Coordinates 1156= 2.0 , 0.0\r\nend Coordinates 1157= 0 , 0\r\nend Coordinates 1158= 0.1 , 0.05\r\nend Coordinates 1159= 1.0,  , f(x,y) \r\nend Coordinates 1160= 2.0 , 0.0\r\nend Coordinates 1161= 0 , 0\r\nend Coordinates 1162= 0.1 , 0.05\r\nend Coordinates 1163= 1.0,  , f(x,y) \r\nend Coordinates 1164= 2.0 , 0.0\r\nend Coordinates 1165= 0 , 0\r\nend Coordinates 1166= 0.1 , 0.05\r\nend Coordinates 1167= 1.0,  , f(x,y) \r\nend Coordinates 1168= 2.0 , 0.0\r\nend Coordinates 1169= 0 , 0\r\nend Coordinates 1170= 0.1 , 0.05\r\nend Coordinates 1171= 1.0,  , f(x,y) \r\nend Coordinates 1172= 2.0 , 0.0\r\nend Coordinates 1173= 0 , 0\r\nend Coordinates 1174= 0.1 , 0.05\r\nend Coordinates 1175= 1.0,  , f(x,y) \r\nend Coordinates 1176= 2.0 , 0.0\r\nend Coordinates 1177= 0 , 0\r\nend Coordinates 1178= 0.1 , 0.05\r\nend Coordinates 1179= 1.0,  , f(x,y) \r\nend Coordinates 1180= 2.0 , 0.0\r\nend Coordinates 1181= 0 , 0\r\nend Coordinates 1182= 0.1 , 0.05\r\nend Coordinates 1183= 1.0,  , f(x,y) \r\nend Coordinates 1184= 2.0 , 0.0\r\nend Coordinates 1185= 0 , 0\r\nend Coordinates 1186= 0.1 , 0.05\r\nend Coordinates 1187= 1.0,  , f(x,y) \r\nend Coordinates 1188= 2.0 , 0.0\r\nend Coordinates 1189= 0 , 0\r\nend Coordinates 1190= 0.1 , 0.05\r\nend Coordinates 1191= 1.0,  , f(x,y) \r\nend Coordinates 1192= 2.0 , 0.0\r\nend Coordinates 1193= 0 , 0\r\nend Coordinates 1194= 0.1 , 0.05\r\nend Coordinates 1195= 1.0,  , f(x,y) \r\nend Coordinates 1196= 2.0 , 0.0\r\nend Coordinates 1197= 0 , 0\r\nend Coordinates 1198= 0.1 , 0.05\r\nend Coordinates 1199= 1.0,  , f(x,y) \r\nend Coordinates 1200= 2.0 , 0.0\r\nend Coordinates 1201= 0 , 0\r\nend Coordinates 1202= 0.1 , 0.05\r\nend Coordinates 1203= 1.0,  , f(x,y) \r\nend Coordinates 1204= 2.0 , 0.0\r\nend Coordinates 1205= 0 , 0\r\nend Coordinates 1206= 0.1 , 0.05\r\nend Coordinates 1207= 1.0,  , f(x,y) \r\nend Coordinates 1208= 2.0 , 0.0\r\nend Coordinates 1209= 0 , 0\r\nend Coordinates 1210= 0.1 , 0.05\r\nend Coordinates 1211= 1.0,  , f(x,y) \r\nend Coordinates 1212= 2.0 , 0.0\r\nend Coordinates 1213= 0 , 0\r\nend Coordinates 1214= 0.1 , 0.05\r\nend Coordinates 1215= 1.0,  , f(x,y) \r\nend Coordinates 1216= 2.0 , 0.0\r\nend Coordinates 1217= 0 , 0\r\nend Coordinates 1218= 0.1 , 0.05\r\nend Coordinates 1219= 1.0,  , f(x,y) \r\nend Coordinates 1220= 2.0 , 0.0\r\nend Coordinates 1221= 0 , 0\r\nend Coordinates 1222= 0.1 , 0.05\r\nend Coordinates 1223= 1.0,  , f(x,y) \r\nend Coordinates 1224= 2.0 , 0.0\r\nend Coordinates 1225= 0 , 0\r\nend Coordinates 1226= 0.1 , 0.05\r\nend Coordinates 1227= 1.0,  , f(x,y) \r\nend Coordinates 1228= 2.0 , 0.0\r\nend Coordinates 1229= 0 , 0\r\nend Coordinates 1230= 0.1 , 0.05\r\nend Coordinates 1231= 1.0,  , f(x,y) \r\nend Coordinates 1232= 2.0 , 0.0\r\nend Coordinates 1233= 0 , 0\r\nend Coordinates 1234= 0.1 , 0.05\r\nend Coordinates 1235= 1.0,  , f(x,y) \r\nend Coordinates 1236= 2.0 , 0.0\r\nend Coordinates 1237= 0 , 0\r\nend Coordinates 1238= 0.1 , 0.05\r\nend Coordinates 1239= 1.0,  , f(x,y) \r\nend Coordinates 1240= 2.0 , 0.0\r\nend Coordinates 1241= 0 , 0\r\nend Coordinates 1242= 0.1 , 0.05\r\nend Coordinates 1243= 1.0,  , f(x,y) \r\nend Coordinates 1244= 2.0 , 0.0\r\nend Coordinates 1245= 0 , 0\r\nend Coordinates 1246= 0.1 , 0.05\r\nend Coordinates 1247= 1.0,  , f(x,y) \r\nend Coordinates 1248= 2.0 , 0.0\r\nend Coordinates 1249= 0 , 0\r\nend Coordinates 1250= 0.1 , 0.05\r\nend Coordinates 1251= 1.0,  , f(x,y) \r\nend Coordinates 1252= 2.0 , 0.0\r\nend Coordinates 1253= 0 , 0\r\nend Coordinates 1254= 0.1 , 0.05\r\nend Coordinates 1255= 1.0,  , f(x,y) \r\nend Coordinates 1256= 2.0 , 0.0\r\nend Coordinates 1257= 0 , 0\r\nend Coordinates 1258= 0.1 , 0.05\r\nend Coordinates 1259= 1.0,  , f(x,y) \r\nend Coordinates 1260= 2.0 , 0.0\r\nend Coordinates 1261= 0 , 0\r\nend Coordinates 1262= 0.1 , 0.05\r\nend Coordinates 1263= 1.0,  , f(x,y) \r\nend Coordinates 1264= 2.0 , 0.0\r\nend Coordinates 1265= 0 , 0\r\nend Coordinates 1266= 0.1 , 0.05\r\nend Coordinates 1267= 1.0,  , f(x,y) \r\nend Coordinates 1268= 2.0 , 0.0\r\nend Coordinates 1269= 0 , 0\r\nend Coordinates 1270= 0.1 , 0.05\r\nend Coordinates 1271= 1.0,  , f(x,y) \r\nend Coordinates 1272= 2.0 , 0.0\r\nend Coordinates 1273= 0 , 0\r\nend Coordinates 1274= 0.1 , 0.05\r\nend Coordinates 1275= 1.0,  , f(x,y) \r\nend Coordinates 1276= 2.0 , 0.0\r\nend Coordinates 1277= 0 , 0\r\nend Coordinates 1278= 0.1 , 0.05\r\nend Coordinates 1279= 1.0,  , f(x,y) \r\nend Coordinates 1280= 2.0 , 0.0\r\nend Coordinates 1281= 0 , 0\r\nend Coordinates 1282= 0.1 , 0.05\r\nend Coordinates 1283= 1.0,  , f(x,y) \r\nend Coordinates 1284= 2.0 , 0.0\r\nend Coordinates 1285= 0 , 0\r\nend Coordinates 1286= 0.1 , 0.05\r\nend Coordinates 1287= 1.0,  , f(x,y) \r\nend Coordinates 1288= 2.0 , 0.0\r\nend Coordinates 1289= 0 , 0\r\nend Coordinates 1290= 0.1 , 0.05\r\nend Coordinates 1291= 1.0,  , f(x,y) \r\nend Coordinates 1292= 2.0 , 0.0\r\nend Coordinates 1293= 0 , 0\r\nend Coordinates 1294= 0.1 , 0.05\r\nend Coordinates 1295= 1.0,  , f(x,y) \r\nend Coordinates 1296= 2.0 , 0.0\r\nend Coordinates 1297= 0 , 0\r\nend Coordinates 1298= 0.1 , 0.05\r\nend Coordinates 1299= 1.0,  , f(x,y) \r\nend Coordinates 1300= 2.0 , 0.0\r\nend Coordinates 1301= 0 , 0\r\nend Coordinates 1302= 0.1 , 0.05\r\nend Coordinates 1303= 1.0,  , f(x,y) \r\nend Coordinates 1304= 2.0 , 0.0\r\nend Coordinates 1305= 0 , 0\r\nend Coordinates 1306= 0.1 , 0.05\r\nend Coordinates 1307= 1.0,  , f(x,y) \r\nend Coordinates 1308= 2.0 , 0.0\r\nend Coordinates 1309= 0 , 0\r\nend Coordinates 1310= 0.1 , 0.05\r\nend Coordinates 1311= 1.0,  , f(x,y) \r\nend Coordinates 1312= 2.0 , 0.0\r\nend Coordinates 1313= 0 , 0\r\nend Coordinates 1314= 0.1 , 0.05\r\nend Coordinates 1315= 1.0,  , f(x,y) \r\nend Coordinates 1316= 2.0 , 0.0\r\nend Coordinates 1317= 0 , 0\r\nend Coordinates 1318= 0.1 , 0.05\r\nend Coordinates 1319= 1.0,  , f(x,y) \r\nend Coordinates 1320= 2.0 , 0.0\r\nend Coordinates 1321= 0 , 0\r\nend Coordinates 1322= 0.1 , 0.05\r\nend Coordinates 1323= 1.0,  , f(x,y) \r\nend Coordinates 1324= 2.0 , 0.0\r\nend Coordinates 1325= 0 , 0\r\nend Coordinates 1326= 0.1 , 0.05\r\nend Coordinates 1327= 1.0,  , f(x,y) \r\nend Coordinates 1328= 2.0 , 0.0\r\nend Coordinates 1329= 0 , 0\r\nend Coordinates 1330= 0.1 , 0.05\r\nend Coordinates 1331= 1.0,  , f(x,y) \r\nend Coordinates 1332= 2.0 , 0.0\r\nend Coordinates 1333= 0 , 0\r\nend Coordinates 1334= 0.1 , 0.05\r\nend Coordinates 1335= 1.0,  , f(x,y) \r\nend Coordinates 1336= 2.0 , 0.0\r\nend Coordinates 1337= 0 , 0\r\nend Coordinates 1338= 0.1 , 0.05\r\nend Coordinates 1339= 1.0,  , f(x,y) \r\nend Coordinates 1340= 2.0 , 0.0\r\nend Coordinates 1341= 0 , 0\r\nend Coordinates 1342= 0.1 , 0.05\r\nend Coordinates 1343= 1.0,  , f(x,y) \r\nend Coordinates 1344= 2.0 , 0.0\r\nend Coordinates 1345= 0 , 0\r\nend Coordinates 1346= 0.1 , 0.05\r\nend Coordinates 1347= 1.0,  , f(x,y) \r\nend Coordinates 1348= 2.0 , 0.0\r\nend Coordinates 1349= 0 , 0\r\nend Coordinates 1350= 0.1 , 0.05\r\nend Coordinates 1351= 1.0,  , f(x,y) \r\nend Coordinates 1352= 2.0 , 0.0\r\nend Coordinates 1353= 0 , 0\r\nend Coordinates 1354= 0.1 , 0.05\r\nend Coordinates 1355= 1.0,  , f(x,y) \r\nend Coordinates 1356= 2.0 , 0.0\r\nend Coordinates 1357= 0 , 0\r\nend Coordinates 1358= 0.1 , 0.05\r\nend Coordinates 1359= 1.0,  , f(x,y) \r\nend Coordinates 1360= 2.0 , 0.0\r\nend Coordinates 1361= 0 , 0\r\nend Coordinates 1362= 0.1 , 0.05\r\nend Coordinates 1363= 1.0,  , f(x,y) \r\nend Coordinates 1364= 2.0 , 0.0\r\nend Coordinates 1365= 0 , 0\r\nend Coordinates 1366= 0.1 , 0.05\r\nend Coordinates 1367= 1.0,  , f(x,y) \r\nend Coordinates 1368= 2.0 , 0.0\r\nend Coordinates 1369= 0 , 0\r\nend Coordinates 1370= 0.1 , 0.05\r\nend Coordinates 1371= 1.0,  , f(x,y) \r\nend Coordinates 1372= 2.0 , 0.0\r\nend Coordinates 1373= 0 , 0\r\nend Coordinates 1374= 0.1 , 0.05\r\nend Coordinates 1375= 1.0,  , f(x,y) \r\nend Coordinates 1376= 2.0 , 0.0\r\nend Coordinates 1377= 0 , 0\r\nend Coordinates 1378= 0.1 , 0.05\r\nend Coordinates 1379= 1.0,  , f(x,y) \r\nend Coordinates 1380= 2.0 , 0.0\r\nend Coordinates 1381= 0 , 0\r\nend Coordinates 1382= 0.1 , 0.05\r\nend Coordinates 1383= 1.0,  , f(x,y) \r\nend Coordinates 1384= 2.0 , 0.0\r\nend Coordinates 1385= 0 , 0\r\nend Coordinates 1386= 0.1 , 0.05\r\nend Coordinates 1387= 1.0,  , f(x,y) \r\nend Coordinates 1388= 2.0 , 0.0\r\nend Coordinates 1389= 0 , 0\r\nend Coordinates 1390= 0.1 , 0.05\r\nend Coordinates 1391= 1.0,  , f(x,y) \r\nend Coordinates 1392= 2.0 , 0.0\r\nend Coordinates 1393= 0 , 0\r\nend Coordinates 1394= 0.1 , 0.05\r\nend Coordinates 1395= 1.0,  , f(x,y) \r\nend Coordinates 1396= 2.0 , 0.0\r\nend Coordinates 1397= 0 , 0\r\nend Coordinates 1398= 0.1 , 0.05\r\nend Coordinates 1399= 1.0,  , f(x,y) \r\nend Coordinates 1400= 2.0 , 0.0\r\nend Coordinates 1401= 0 , 0\r\nend Coordinates 1402= 0.1 , 0.05\r\nend Coordinates 1403= 1.0,  , f(x,y) \r\nend Coordinates 1404= 2.0 , 0.0\r\nend Coordinates 1405= 0 , 0\r\nend Coordinates 1406= 0.1 , 0.05\r\nend Coordinates 1407= 1.0,  , f(x,y) \r\nend Coordinates 1408= 2.0 , 0.0\r\nend Coordinates 1409= 0 , 0\r\nend Coordinates 1410= 0.1 , 0.05\r\nend Coordinates 1411= 1.0,  , f(x,y) \r\nend Coordinates 1412= 2.0 , 0.0\r\nend Coordinates 1413= 0 , 0\r\nend Coordinates 1414= 0.1 , 0.05\r\nend Coordinates 1415= 1.0,  , f(x,y) \r\nend Coordinates 1416= 2.0 , 0.0\r\nend Coordinates 1417= 0 , 0\r\nend Coordinates 1418= 0.1 , 0.05\r\nend Coordinates 1419= 1.0,  , f(x,y) \r\nend Coordinates 1420= 2.0 , 0.0\r\nend Coordinates 1421= 0 , 0\r\nend Coordinates 1422= 0.1 , 0.05\r\nend Coordinates 1423= 1.0,  , f(x,y) \r\nend Coordinates 1424= 2.0 , 0.0\r\nend Coordinates 1425= 0 , 0\r\nend Coordinates 1426= 0.1 , 0.05\r\nend Coordinates 1427= 1.0,  , f(x,y) \r\nend Coordinates 1428= 2.0 , 0.0\r\nend Coordinates 1429= 0 , 0\r\nend Coordinates 1430= 0.1 , 0.05\r\nend Coordinates 1431= 1.0,  , f(x,y) \r\nend Coordinates 1432= 2.0 , 0.0\r\nend Coordinates 1433= 0 , 0\r\nend Coordinates 1434= 0.1 , 0.05\r\nend Coordinates 1435= 1.0,  , f(x,y) \r\nend Coordinates 1436= 2.0 , 0.0\r\nend Coordinates 1437= 0 , 0\r\nend Coordinates 1438= 0.1 , 0.05\r\nend Coordinates 1439= 1.0,  , f(x,y) \r\nend Coordinates 1440= 2.0 , 0.0\r\nend Coordinates 1441= 0 , 0\r\nend Coordinates 1442= 0.1 , 0.05\r\nend Coordinates 1443= 1.0,  , f(x,y) \r\nend Coordinates 1444= 2.0 , 0.0\r\nend Coordinates 1445= 0 , 0\r\nend Coordinates 1446= 0.1 , 0.05\r\nend Coordinates 1447= 1.0,  , f(x,y) \r\nend Coordinates 1448= 2.0 , 0.0\r\nend Coordinates 1449= 0 , 0\r\nend Coordinates 1450= 0.1 , 0.05\r\nend Coordinates 1451= 1.0,  , f(x,y) \r\nend Coordinates 1452= 2.0 , 0.0\r\nend Coordinates 1453= 0 , 0\r\nend Coordinates 1454= 0.1 , 0.05\r\nend Coordinates 1455= 1.0,  , f(x,y) \r\nend Coordinates 1456= 2.0 , 0.0\r\nend Coordinates 1457= 0 , 0\r\nend Coordinates 1458= 0.1 , 0.05\r\nend Coordinates 1459= 1.0,  , f(x,y) \r\nend Coordinates 1460= 2.0 , 0.0\r\nend Coordinates 1461= 0 , 0\r\nend Coordinates 1462= 0.1 , 0.05\r\nend Coordinates 1463= 1.0,  , f(x,y) \r\nend Coordinates 1464= 2.0 , 0.0\r\nend Coordinates 1465= 0 , 0\r\nend Coordinates 1466= 0.1 , 0.05\r\nend Coordinates 1467= 1.0,  , f(x,y) \r\nend Coordinates 1468= 2.0 , 0.0\r\nend Coordinates 1469= 0 , 0\r\nend Coordinates 1470= 0.1 , 0.05\r\nend Coordinates 1471= 1.0,  , f(x,y) \r\nend Coordinates 1472= 2.0 , 0.0\r\nend Coordinates 1473= 0 , 0\r\nend Coordinates 1474= 0.1 , 0.05\r\nend Coordinates 1475= 1.0,  , f(x,y) \r\nend Coordinates 1476= 2.0 , 0.0\r\nend Coordinates 1477= 0 , 0\r\nend Coordinates 1478= 0.1 , 0.05\r\nend Coordinates 1479= 1.0,  , f(x,y) \r\nend Coordinates 1480= 2.0 , 0.0\r\nend Coordinates 1481= -6 , 4\r\nend Coordinates 1482= 0.1 , 0.05\r\nend Coordinates 1483= 1.0,  , f(x,y) \r\nend Coordinates 1484= 2.0 , 0.0\r\nend Coordinates 1485= -6 , 4\r\nend Coordinates 1486= 0.1 , 0.05\r\nend Coordinates 1487= 1.0,  , f(x,y) \r\nend Coordinates 1488= 2.0 , 0.0\r\nend Coordinates 1489= -6 , 4\r\nend Coordinates 1490= 0.1 , 0.05\r\nend Coordinates 1491= 1.0,  , f(x,y) \r\nend Coordinates 1492= 2.0 , 0.0\r\nend Coordinates 1493= -6 , 4\r\nend Coordinates 1494= 0.1 , 0.05\r\nend Coordinates 1495= 1.0,  , f(x,y) \r\nend Coordinates 1496= 2.0 , 0.0\r\nend Coordinates 1497= -6 , 4\r\nend Coordinates 1498= 0.1 , 0.05\r\nend Coordinates 1499= 1.0,  , f(x,y) \r\nend Coordinates 1500= 2.0 , 0.0\r\nend Coordinates 1501= -6 , 4\r\nend Coordinates 1502= 0.1 , 0.05\r\nend Coordinates 1503= 1.0,  , f(x,y) \r\nend Coordinates 1504= 2.0 , 0.0\r\nend Coordinates 1505= -6 , 4\r\nend Coordinates 1506= 0.1 , 0.05\r\nend Coordinates 1507= 1.0,  , f(x,y) \r\nend Coordinates 1508= 2.0 , 0.0\r\nend Coordinates 1509= -6 , 4\r\nend Coordinates 1510= 0.1 , 0.05\r\nend Coordinates 1511= 1.0,  , f(x,y) \r\nend Coordinates 1512= 2.0 , 0.0\r\nend Coordinates 1513= -6 , 4\r\nend Coordinates 1514= 0.1 , 0.05\r\nend Coordinates 1515= 1.0,  , f(x,y) \r\nend Coordinates 1516= 2.0 , 0.0\r\nend Coordinates 1517= -6 , 4\r\nend Coordinates 1518= 0.1 , 0.05\r\nend Coordinates 1519= 1.0,  , f(x,y) \r\nend Coordinates 1520= 2.0 , 0.0\r\nend Coordinates 1521= -6 , 4\r\nend Coordinates 1522= 0.1 , 0.05\r\nend Coordinates 1523= 1.0,  , f(x,y) \r\nend Coordinates 1524= 2.0 , 0.0\r\nend Coordinates 1525= -6 , 4\r\nend Coordinates 1526= 0.1 , 0.05\r\nend Coordinates 1527= 1.0,  , f(x,y) \r\nend Coordinates 1528= 2.0 , 0.0\r\nend Coordinates 1529= -6 , 4\r\nend Coordinates 1530= 0.1 , 0.05\r\nend Coordinates 1531= 1.0,  , f(x,y) \r\nend Coordinates 1532= 2.0 , 0.0\r\nend Coordinates 1533= -6 , 4\r\nend Coordinates 1534= 0.1 , 0.05\r\nend Coordinates 1535= 1.0,  , f(x,y) \r\nend Coordinates 1536= 2.0 , 0.0\r\nend Coordinates 1537= -6 , 4\r\nend Coordinates 1538= 0.1 , 0.05\r\nend Coordinates 1539= 1.0,  , f(x,y) \r\nend Coordinates 1540= 2.0 , 0.0\r\nend Coordinates 1541= -6 , 4\r\nend Coordinates 1542= 0.1 , 0.05\r\nend Coordinates 1543= 1.0,  , f(x,y) \r\nend Coordinates 1544= 2.0 , 0.0\r\nend Coordinates 1545= -6 , 4\r\nend Coordinates 1546= 0.1 , 0.05\r\nend Coordinates 1547= 1.0,  , f(x,y) \r\nend Coordinates 1548= 2.0 , 0.0\r\nend Coordinates 1549= -6 , 4\r\nend Coordinates 1550= 0.1 , 0.05\r\nend Coordinates 1551= 1.0,  , f(x,y) \r\nend Coordinates 1552= 2.0 , 0.0\r\nend Coordinates 1553= -6 , 4\r\nend Coordinates 1554= 0.1 , 0.05\r\nend Coordinates 1555= 1.0,  , f(x,y) \r\nend Coordinates 1556= 2.0 , 0.0\r\nend Coordinates 1557= -6 , 4\r\nend Coordinates 1558= 0.1 , 0.05\r\nend Coordinates 1559= 1.0,  , f(x,y) \r\nend Coordinates 1560= 2.0 , 0.0\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/write.txt b/write.txt
--- a/write.txt	(revision 5e2d10af338e78072bc78487bcfd9e133a4f4a83)
+++ b/write.txt	(date 1650649936878)
@@ -1558,3 +1558,63 @@
 end Coordinates 1558= 0.1 , 0.05
 end Coordinates 1559= 1.0,  , f(x,y) 
 end Coordinates 1560= 2.0 , 0.0
+end Coordinates 1561= -6 , 4
+end Coordinates 1562= 0.1 , 0.05
+end Coordinates 1563= 1.0,  , f(x,y) 
+end Coordinates 1564= 2.0 , 0.0
+end Coordinates 1565= -6 , 4
+end Coordinates 1566= 0.1 , 0.05
+end Coordinates 1567= 1.0,  , f(x,y) 
+end Coordinates 1568= 2.0 , 0.0
+end Coordinates 1569= -6 , 4
+end Coordinates 1570= 0.1 , 0.05
+end Coordinates 1571= 1.0,  , f(x,y) 
+end Coordinates 1572= 2.0 , 0.0
+end Coordinates 1573= -6 , 4
+end Coordinates 1574= 0.1 , 0.05
+end Coordinates 1575= 1.0,  , f(x,y) 
+end Coordinates 1576= 2.0 , 0.0
+end Coordinates 1577= -6 , 4
+end Coordinates 1578= 0.1 , 0.05
+end Coordinates 1579= 1.0,  , f(x,y) 
+end Coordinates 1580= 2.0 , 0.0
+end Coordinates 1581= -6 , 4
+end Coordinates 1582= 0.1 , 0.05
+end Coordinates 1583= 1.0,  , f(x,y) 
+end Coordinates 1584= 2.0 , 0.0
+end Coordinates 1585= -6 , 4
+end Coordinates 1586= 0.1 , 0.05
+end Coordinates 1587= 1.0,  , f(x,y) 
+end Coordinates 1588= 2.0 , 0.0
+end Coordinates 1589= -6 , 4
+end Coordinates 1590= 0.1 , 0.05
+end Coordinates 1591= 1.0,  , f(x,y) 
+end Coordinates 1592= 2.0 , 0.0
+end Coordinates 1593= -6 , 4
+end Coordinates 1594= 0.1 , 0.05
+end Coordinates 1595= 1.0,  , f(x,y) 
+end Coordinates 1596= 2.0 , 0.0
+end Coordinates 1597= -6 , 4
+end Coordinates 1598= 0.1 , 0.05
+end Coordinates 1599= 1.0,  , f(x,y) 
+end Coordinates 1600= 2.0 , 0.0
+end Coordinates 1601= -6 , 4
+end Coordinates 1602= 0.1 , 0.05
+end Coordinates 1603= 1.0,  , f(x,y) 
+end Coordinates 1604= 2.0 , 0.0
+end Coordinates 1605= -6 , 4
+end Coordinates 1606= 0.1 , 0.05
+end Coordinates 1607= 1.0,  , f(x,y) 
+end Coordinates 1608= 2.0 , 0.0
+end Coordinates 1609= -6 , 4
+end Coordinates 1610= 0.1 , 0.05
+end Coordinates 1611= 1.0,  , f(x,y) 
+end Coordinates 1612= 2.0 , 0.0
+end Coordinates 1613= -6 , 4
+end Coordinates 1614= 0.1 , 0.05
+end Coordinates 1615= 1.0,  , f(x,y) 
+end Coordinates 1616= 2.0 , 0.0
+end Coordinates 1617= -6 , 4
+end Coordinates 1618= 0.1 , 0.05
+end Coordinates 1619= 1.0,  , f(x,y) 
+end Coordinates 1620= 2.0 , 0.0
Index: core/src/physics/sytem/DifferentTerrain.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package physics.sytem;\r\n\r\n\r\n\r\npublic interface DifferentTerrain {\r\n\r\n    public void change(double [] coordsAndVelocity);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/src/physics/sytem/DifferentTerrain.java b/core/src/physics/sytem/DifferentTerrain.java
--- a/core/src/physics/sytem/DifferentTerrain.java	(revision 5e2d10af338e78072bc78487bcfd9e133a4f4a83)
+++ b/core/src/physics/sytem/DifferentTerrain.java	(date 1650366251000)
@@ -4,5 +4,5 @@
 
 public interface DifferentTerrain {
 
-    public void change(double [] coordsAndVelocity);
+    public void change(double [] coordsAndVelocity, double [] tempCoordinates);
 }
